{"version":3,"sources":["webpack:///./template-src/js/slider-slick.js","webpack:///./node_modules/slick-carousel/slick/slick.js"],"names":["__webpack_require__","r","__webpack_exports__","d","init","jQ","DEBUG","jQuery","debug","console","info","$slickSliders","length","each","$sliderElement","this","find","data","Mercury","device","mobile","arrows","fade","slick","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","undefined","$","Slick","window","instanceUid","element","settings","dataSettings","_","defaults","accessibility","adaptiveHeight","appendArrows","appendDots","asNavFor","prevArrow","nextArrow","autoplay","autoplaySpeed","centerMode","centerPadding","cssEase","customPaging","slider","i","text","dots","dotsClass","draggable","easing","edgeFriction","focusOnSelect","focusOnChange","infinite","initialSlide","lazyLoad","mobileFirst","pauseOnHover","pauseOnFocus","pauseOnDotsHover","respondTo","responsive","rows","rtl","slide","slidesPerRow","slidesToShow","slidesToScroll","speed","swipe","swipeToSlide","touchMove","touchThreshold","useCSS","useTransform","variableWidth","vertical","verticalSwiping","waitForAnimate","zIndex","initials","animating","dragging","autoPlayTimer","currentDirection","currentLeft","currentSlide","direction","$dots","listWidth","listHeight","loadIndex","$nextArrow","$prevArrow","scrolling","slideCount","slideWidth","$slideTrack","$slides","sliding","slideOffset","swipeLeft","swiping","$list","touchObject","transformsEnabled","unslicked","extend","activeBreakpoint","animType","animProp","breakpoints","breakpointSettings","cssTransitions","focussed","interrupted","hidden","paused","positionProp","rowCount","shouldClick","$slider","$slidesCache","transformType","transitionType","visibilityChange","windowWidth","windowTimer","options","originalSettings","document","mozHidden","webkitHidden","autoPlay","proxy","autoPlayClear","autoPlayIterator","changeSlide","clickHandler","selectHandler","setPosition","swipeHandler","dragHandler","keyHandler","htmlExpr","registerBreakpoints","prototype","activateADA","attr","aria-hidden","tabindex","addSlide","slickAdd","markup","index","addBefore","unload","appendTo","insertBefore","eq","insertAfter","prependTo","children","detach","append","reinit","animateHeight","targetHeight","outerHeight","animate","height","animateSlide","targetLeft","callback","animProps","left","top","animStart","duration","step","now","Math","ceil","css","complete","call","applyTransition","setTimeout","disableTransition","getNavTarget","not","target","slideHandler","transition","setInterval","clearInterval","slideTo","buildArrows","addClass","removeClass","removeAttr","test","add","aria-disabled","buildDots","dot","getDotCount","first","buildOut","wrapAll","parent","wrap","setupInfinite","updateDots","setSlideClasses","buildRows","a","b","c","newSlides","numOfSlides","originalSlides","slidesPerSection","createDocumentFragment","createElement","row","get","appendChild","empty","width","display","checkResponsive","initial","forceUpdate","breakpoint","targetBreakpoint","respondToWidth","triggerBreakpoint","sliderWidth","innerWidth","min","hasOwnProperty","unslick","refresh","trigger","event","dontAnimate","indexOffset","unevenOffset","$target","currentTarget","is","preventDefault","closest","message","checkNavigable","navigables","prevNavigable","getNavigableIndexes","n","cleanUpEvents","off","interrupt","visibility","cleanUpSlideEvents","orientationChange","resize","cleanUpRows","stopImmediatePropagation","stopPropagation","destroy","remove","fadeSlide","slideIndex","opacity","fadeSlideOut","filterSlides","slickFilter","filter","focusHandler","on","$sf","getCurrent","slickCurrentSlide","breakPoint","counter","pagerQty","getLeft","verticalHeight","targetSlide","coef","verticalOffset","floor","offsetLeft","outerWidth","getOption","slickGetOption","option","max","indexes","push","getSlick","getSlideCount","swipedSlide","centerOffset","abs","goTo","slickGoTo","parseInt","creation","hasClass","setProps","startLoad","loadSlider","initializeEvents","updateArrows","initADA","numDotGroups","tabControlIndexes","val","slideControlIndex","indexOf","role","id","ariaButtonControl","aria-describedby","mappedSlideIndex","aria-controls","aria-label","aria-selected","end","initArrowEvents","initDotEvents","initSlideEvents","action","initUI","show","tagName","match","keyCode","loadRange","rangeStart","rangeEnd","loadImages","imagesScope","image","imageSource","imageSrcSet","imageSizes","imageToLoad","onload","onerror","src","slice","prevSlide","nextSlide","progressiveLazyLoad","next","slickNext","pause","slickPause","play","slickPlay","postSlide","$currentSlide","focus","prev","slickPrev","tryCount","$imgsToLoad","initializing","lastVisibleIndex","currentBreakpoint","l","responsiveSettings","type","splice","sort","clearTimeout","windowDelay","removeSlide","slickRemove","removeBefore","removeAll","setCSS","position","x","y","positionProps","setDimensions","padding","offset","setFade","right","setHeight","setOption","slickSetOption","item","value","arguments","opt","bodyStyle","body","style","WebkitTransition","MozTransition","msTransition","OTransform","perspectiveProperty","webkitPerspective","MozTransform","MozPerspective","webkitTransform","msTransform","transform","allSlides","remainder","evenCoef","infiniteCount","clone","toggle","targetElement","parents","sync","animSlide","oldSlide","slideLeft","navTarget","hide","swipeDirection","xDist","yDist","swipeAngle","startX","curX","startY","curY","atan2","round","PI","swipeEnd","swipeLength","edgeHit","minSwipe","fingerCount","originalEvent","touches","swipeStart","swipeMove","curLeft","positionOffset","verticalSwipeLength","pageX","clientX","pageY","clientY","sqrt","pow","unfilterSlides","slickUnfilter","fromBreakpoint","fn","ret","args","Array","apply","exports","module"],"mappings":"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","file":"mercury-slider-slick.js","sourcesContent":["/*\n * This program is part of the OpenCms Mercury Template.\n *\n * Copyright (c) Alkacon Software GmbH & Co. KG (http://www.alkacon.com)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nimport SlickSlider from \"slick-carousel\";\n\n// the global objects that must be passed to this module\nvar jQ;\nvar DEBUG;\n\n\"use strict\";\n\nfunction initSlickSliders($sliders) {\n\n    $sliders.each(function(){\n        var $slider = jQ(this);\n        var $sliderElement = $slider.find('.slide-definitions.list-of-slides');\n        var data = $sliderElement.data('typeslick') || {};\n        if (Mercury.device().mobile()) {\n            data.arrows = false;\n            data.fade = false;\n        }\n        $sliderElement.slick(data);\n    });\n}\n\n/****** Exported functions ******/\n\nexport function init(jQuery, debug) {\n\n    jQ = jQuery;\n    DEBUG = debug;\n\n    if (DEBUG) console.info(\"SliderSlick.init()\");\n\n    var $slickSliders = jQuery('.type-slick-slider');\n    if (DEBUG) console.info(\".type-slick-slider elements found: \" + $slickSliders.length);\n    if ($slickSliders.length > 0) {\n        initSlickSliders($slickSliders);\n    }\n}\n","/*\n     _ _      _       _\n ___| (_) ___| | __  (_)___\n/ __| | |/ __| |/ /  | / __|\n\\__ \\ | | (__|   < _ | \\__ \\\n|___/_|_|\\___|_|\\_(_)/ |___/\n                   |__/\n\n Version: 1.8.1\n  Author: Ken Wheeler\n Website: http://kenwheeler.github.io\n    Docs: http://kenwheeler.github.io/slick\n    Repo: http://github.com/kenwheeler/slick\n  Issues: http://github.com/kenwheeler/slick/issues\n\n */\n/* global window, document, define, jQuery, setInterval, clearInterval */\n;(function(factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n\n}(function($) {\n    'use strict';\n    var Slick = window.Slick || {};\n\n    Slick = (function() {\n\n        var instanceUid = 0;\n\n        function Slick(element, settings) {\n\n            var _ = this, dataSettings;\n\n            _.defaults = {\n                accessibility: true,\n                adaptiveHeight: false,\n                appendArrows: $(element),\n                appendDots: $(element),\n                arrows: true,\n                asNavFor: null,\n                prevArrow: '<button class=\"slick-prev\" aria-label=\"Previous\" type=\"button\">Previous</button>',\n                nextArrow: '<button class=\"slick-next\" aria-label=\"Next\" type=\"button\">Next</button>',\n                autoplay: false,\n                autoplaySpeed: 3000,\n                centerMode: false,\n                centerPadding: '50px',\n                cssEase: 'ease',\n                customPaging: function(slider, i) {\n                    return $('<button type=\"button\" />').text(i + 1);\n                },\n                dots: false,\n                dotsClass: 'slick-dots',\n                draggable: true,\n                easing: 'linear',\n                edgeFriction: 0.35,\n                fade: false,\n                focusOnSelect: false,\n                focusOnChange: false,\n                infinite: true,\n                initialSlide: 0,\n                lazyLoad: 'ondemand',\n                mobileFirst: false,\n                pauseOnHover: true,\n                pauseOnFocus: true,\n                pauseOnDotsHover: false,\n                respondTo: 'window',\n                responsive: null,\n                rows: 1,\n                rtl: false,\n                slide: '',\n                slidesPerRow: 1,\n                slidesToShow: 1,\n                slidesToScroll: 1,\n                speed: 500,\n                swipe: true,\n                swipeToSlide: false,\n                touchMove: true,\n                touchThreshold: 5,\n                useCSS: true,\n                useTransform: true,\n                variableWidth: false,\n                vertical: false,\n                verticalSwiping: false,\n                waitForAnimate: true,\n                zIndex: 1000\n            };\n\n            _.initials = {\n                animating: false,\n                dragging: false,\n                autoPlayTimer: null,\n                currentDirection: 0,\n                currentLeft: null,\n                currentSlide: 0,\n                direction: 1,\n                $dots: null,\n                listWidth: null,\n                listHeight: null,\n                loadIndex: 0,\n                $nextArrow: null,\n                $prevArrow: null,\n                scrolling: false,\n                slideCount: null,\n                slideWidth: null,\n                $slideTrack: null,\n                $slides: null,\n                sliding: false,\n                slideOffset: 0,\n                swipeLeft: null,\n                swiping: false,\n                $list: null,\n                touchObject: {},\n                transformsEnabled: false,\n                unslicked: false\n            };\n\n            $.extend(_, _.initials);\n\n            _.activeBreakpoint = null;\n            _.animType = null;\n            _.animProp = null;\n            _.breakpoints = [];\n            _.breakpointSettings = [];\n            _.cssTransitions = false;\n            _.focussed = false;\n            _.interrupted = false;\n            _.hidden = 'hidden';\n            _.paused = true;\n            _.positionProp = null;\n            _.respondTo = null;\n            _.rowCount = 1;\n            _.shouldClick = true;\n            _.$slider = $(element);\n            _.$slidesCache = null;\n            _.transformType = null;\n            _.transitionType = null;\n            _.visibilityChange = 'visibilitychange';\n            _.windowWidth = 0;\n            _.windowTimer = null;\n\n            dataSettings = $(element).data('slick') || {};\n\n            _.options = $.extend({}, _.defaults, settings, dataSettings);\n\n            _.currentSlide = _.options.initialSlide;\n\n            _.originalSettings = _.options;\n\n            if (typeof document.mozHidden !== 'undefined') {\n                _.hidden = 'mozHidden';\n                _.visibilityChange = 'mozvisibilitychange';\n            } else if (typeof document.webkitHidden !== 'undefined') {\n                _.hidden = 'webkitHidden';\n                _.visibilityChange = 'webkitvisibilitychange';\n            }\n\n            _.autoPlay = $.proxy(_.autoPlay, _);\n            _.autoPlayClear = $.proxy(_.autoPlayClear, _);\n            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);\n            _.changeSlide = $.proxy(_.changeSlide, _);\n            _.clickHandler = $.proxy(_.clickHandler, _);\n            _.selectHandler = $.proxy(_.selectHandler, _);\n            _.setPosition = $.proxy(_.setPosition, _);\n            _.swipeHandler = $.proxy(_.swipeHandler, _);\n            _.dragHandler = $.proxy(_.dragHandler, _);\n            _.keyHandler = $.proxy(_.keyHandler, _);\n\n            _.instanceUid = instanceUid++;\n\n            // A simple way to check for HTML strings\n            // Strict HTML recognition (must start with <)\n            // Extracted from jQuery v1.11 source\n            _.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\n\n            _.registerBreakpoints();\n            _.init(true);\n\n        }\n\n        return Slick;\n\n    }());\n\n    Slick.prototype.activateADA = function() {\n        var _ = this;\n\n        _.$slideTrack.find('.slick-active').attr({\n            'aria-hidden': 'false'\n        }).find('a, input, button, select').attr({\n            'tabindex': '0'\n        });\n\n    };\n\n    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            addBefore = index;\n            index = null;\n        } else if (index < 0 || (index >= _.slideCount)) {\n            return false;\n        }\n\n        _.unload();\n\n        if (typeof(index) === 'number') {\n            if (index === 0 && _.$slides.length === 0) {\n                $(markup).appendTo(_.$slideTrack);\n            } else if (addBefore) {\n                $(markup).insertBefore(_.$slides.eq(index));\n            } else {\n                $(markup).insertAfter(_.$slides.eq(index));\n            }\n        } else {\n            if (addBefore === true) {\n                $(markup).prependTo(_.$slideTrack);\n            } else {\n                $(markup).appendTo(_.$slideTrack);\n            }\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slides.each(function(index, element) {\n            $(element).attr('data-slick-index', index);\n        });\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.animateHeight = function() {\n        var _ = this;\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.animate({\n                height: targetHeight\n            }, _.options.speed);\n        }\n    };\n\n    Slick.prototype.animateSlide = function(targetLeft, callback) {\n\n        var animProps = {},\n            _ = this;\n\n        _.animateHeight();\n\n        if (_.options.rtl === true && _.options.vertical === false) {\n            targetLeft = -targetLeft;\n        }\n        if (_.transformsEnabled === false) {\n            if (_.options.vertical === false) {\n                _.$slideTrack.animate({\n                    left: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            } else {\n                _.$slideTrack.animate({\n                    top: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            }\n\n        } else {\n\n            if (_.cssTransitions === false) {\n                if (_.options.rtl === true) {\n                    _.currentLeft = -(_.currentLeft);\n                }\n                $({\n                    animStart: _.currentLeft\n                }).animate({\n                    animStart: targetLeft\n                }, {\n                    duration: _.options.speed,\n                    easing: _.options.easing,\n                    step: function(now) {\n                        now = Math.ceil(now);\n                        if (_.options.vertical === false) {\n                            animProps[_.animType] = 'translate(' +\n                                now + 'px, 0px)';\n                            _.$slideTrack.css(animProps);\n                        } else {\n                            animProps[_.animType] = 'translate(0px,' +\n                                now + 'px)';\n                            _.$slideTrack.css(animProps);\n                        }\n                    },\n                    complete: function() {\n                        if (callback) {\n                            callback.call();\n                        }\n                    }\n                });\n\n            } else {\n\n                _.applyTransition();\n                targetLeft = Math.ceil(targetLeft);\n\n                if (_.options.vertical === false) {\n                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n                } else {\n                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n                }\n                _.$slideTrack.css(animProps);\n\n                if (callback) {\n                    setTimeout(function() {\n\n                        _.disableTransition();\n\n                        callback.call();\n                    }, _.options.speed);\n                }\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.getNavTarget = function() {\n\n        var _ = this,\n            asNavFor = _.options.asNavFor;\n\n        if ( asNavFor && asNavFor !== null ) {\n            asNavFor = $(asNavFor).not(_.$slider);\n        }\n\n        return asNavFor;\n\n    };\n\n    Slick.prototype.asNavFor = function(index) {\n\n        var _ = this,\n            asNavFor = _.getNavTarget();\n\n        if ( asNavFor !== null && typeof asNavFor === 'object' ) {\n            asNavFor.each(function() {\n                var target = $(this).slick('getSlick');\n                if(!target.unslicked) {\n                    target.slideHandler(index, true);\n                }\n            });\n        }\n\n    };\n\n    Slick.prototype.applyTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        if (_.options.fade === false) {\n            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;\n        } else {\n            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;\n        }\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.autoPlay = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        if ( _.slideCount > _.options.slidesToShow ) {\n            _.autoPlayTimer = setInterval( _.autoPlayIterator, _.options.autoplaySpeed );\n        }\n\n    };\n\n    Slick.prototype.autoPlayClear = function() {\n\n        var _ = this;\n\n        if (_.autoPlayTimer) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n    };\n\n    Slick.prototype.autoPlayIterator = function() {\n\n        var _ = this,\n            slideTo = _.currentSlide + _.options.slidesToScroll;\n\n        if ( !_.paused && !_.interrupted && !_.focussed ) {\n\n            if ( _.options.infinite === false ) {\n\n                if ( _.direction === 1 && ( _.currentSlide + 1 ) === ( _.slideCount - 1 )) {\n                    _.direction = 0;\n                }\n\n                else if ( _.direction === 0 ) {\n\n                    slideTo = _.currentSlide - _.options.slidesToScroll;\n\n                    if ( _.currentSlide - 1 === 0 ) {\n                        _.direction = 1;\n                    }\n\n                }\n\n            }\n\n            _.slideHandler( slideTo );\n\n        }\n\n    };\n\n    Slick.prototype.buildArrows = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true ) {\n\n            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');\n            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');\n\n            if( _.slideCount > _.options.slidesToShow ) {\n\n                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');\n\n                if (_.htmlExpr.test(_.options.prevArrow)) {\n                    _.$prevArrow.prependTo(_.options.appendArrows);\n                }\n\n                if (_.htmlExpr.test(_.options.nextArrow)) {\n                    _.$nextArrow.appendTo(_.options.appendArrows);\n                }\n\n                if (_.options.infinite !== true) {\n                    _.$prevArrow\n                        .addClass('slick-disabled')\n                        .attr('aria-disabled', 'true');\n                }\n\n            } else {\n\n                _.$prevArrow.add( _.$nextArrow )\n\n                    .addClass('slick-hidden')\n                    .attr({\n                        'aria-disabled': 'true',\n                        'tabindex': '-1'\n                    });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.buildDots = function() {\n\n        var _ = this,\n            i, dot;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$slider.addClass('slick-dotted');\n\n            dot = $('<ul />').addClass(_.options.dotsClass);\n\n            for (i = 0; i <= _.getDotCount(); i += 1) {\n                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));\n            }\n\n            _.$dots = dot.appendTo(_.options.appendDots);\n\n            _.$dots.find('li').first().addClass('slick-active');\n\n        }\n\n    };\n\n    Slick.prototype.buildOut = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slider\n                .children( _.options.slide + ':not(.slick-cloned)')\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        _.$slides.each(function(index, element) {\n            $(element)\n                .attr('data-slick-index', index)\n                .data('originalStyling', $(element).attr('style') || '');\n        });\n\n        _.$slider.addClass('slick-slider');\n\n        _.$slideTrack = (_.slideCount === 0) ?\n            $('<div class=\"slick-track\"/>').appendTo(_.$slider) :\n            _.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\n        _.$list = _.$slideTrack.wrap(\n            '<div class=\"slick-list\"/>').parent();\n        _.$slideTrack.css('opacity', 0);\n\n        if (_.options.centerMode === true || _.options.swipeToSlide === true) {\n            _.options.slidesToScroll = 1;\n        }\n\n        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');\n\n        _.setupInfinite();\n\n        _.buildArrows();\n\n        _.buildDots();\n\n        _.updateDots();\n\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        if (_.options.draggable === true) {\n            _.$list.addClass('draggable');\n        }\n\n    };\n\n    Slick.prototype.buildRows = function() {\n\n        var _ = this, a, b, c, newSlides, numOfSlides, originalSlides,slidesPerSection;\n\n        newSlides = document.createDocumentFragment();\n        originalSlides = _.$slider.children();\n\n        if(_.options.rows > 0) {\n\n            slidesPerSection = _.options.slidesPerRow * _.options.rows;\n            numOfSlides = Math.ceil(\n                originalSlides.length / slidesPerSection\n            );\n\n            for(a = 0; a < numOfSlides; a++){\n                var slide = document.createElement('div');\n                for(b = 0; b < _.options.rows; b++) {\n                    var row = document.createElement('div');\n                    for(c = 0; c < _.options.slidesPerRow; c++) {\n                        var target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));\n                        if (originalSlides.get(target)) {\n                            row.appendChild(originalSlides.get(target));\n                        }\n                    }\n                    slide.appendChild(row);\n                }\n                newSlides.appendChild(slide);\n            }\n\n            _.$slider.empty().append(newSlides);\n            _.$slider.children().children().children()\n                .css({\n                    'width':(100 / _.options.slidesPerRow) + '%',\n                    'display': 'inline-block'\n                });\n\n        }\n\n    };\n\n    Slick.prototype.checkResponsive = function(initial, forceUpdate) {\n\n        var _ = this,\n            breakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;\n        var sliderWidth = _.$slider.width();\n        var windowWidth = window.innerWidth || $(window).width();\n\n        if (_.respondTo === 'window') {\n            respondToWidth = windowWidth;\n        } else if (_.respondTo === 'slider') {\n            respondToWidth = sliderWidth;\n        } else if (_.respondTo === 'min') {\n            respondToWidth = Math.min(windowWidth, sliderWidth);\n        }\n\n        if ( _.options.responsive &&\n            _.options.responsive.length &&\n            _.options.responsive !== null) {\n\n            targetBreakpoint = null;\n\n            for (breakpoint in _.breakpoints) {\n                if (_.breakpoints.hasOwnProperty(breakpoint)) {\n                    if (_.originalSettings.mobileFirst === false) {\n                        if (respondToWidth < _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    } else {\n                        if (respondToWidth > _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    }\n                }\n            }\n\n            if (targetBreakpoint !== null) {\n                if (_.activeBreakpoint !== null) {\n                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {\n                        _.activeBreakpoint =\n                            targetBreakpoint;\n                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                            _.unslick(targetBreakpoint);\n                        } else {\n                            _.options = $.extend({}, _.originalSettings,\n                                _.breakpointSettings[\n                                    targetBreakpoint]);\n                            if (initial === true) {\n                                _.currentSlide = _.options.initialSlide;\n                            }\n                            _.refresh(initial);\n                        }\n                        triggerBreakpoint = targetBreakpoint;\n                    }\n                } else {\n                    _.activeBreakpoint = targetBreakpoint;\n                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {\n                        _.unslick(targetBreakpoint);\n                    } else {\n                        _.options = $.extend({}, _.originalSettings,\n                            _.breakpointSettings[\n                                targetBreakpoint]);\n                        if (initial === true) {\n                            _.currentSlide = _.options.initialSlide;\n                        }\n                        _.refresh(initial);\n                    }\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            } else {\n                if (_.activeBreakpoint !== null) {\n                    _.activeBreakpoint = null;\n                    _.options = _.originalSettings;\n                    if (initial === true) {\n                        _.currentSlide = _.options.initialSlide;\n                    }\n                    _.refresh(initial);\n                    triggerBreakpoint = targetBreakpoint;\n                }\n            }\n\n            // only trigger breakpoints during an actual break. not on initialize.\n            if( !initial && triggerBreakpoint !== false ) {\n                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);\n            }\n        }\n\n    };\n\n    Slick.prototype.changeSlide = function(event, dontAnimate) {\n\n        var _ = this,\n            $target = $(event.currentTarget),\n            indexOffset, slideOffset, unevenOffset;\n\n        // If target is a link, prevent default action.\n        if($target.is('a')) {\n            event.preventDefault();\n        }\n\n        // If target is not the <li> element (ie: a child), find the <li>.\n        if(!$target.is('li')) {\n            $target = $target.closest('li');\n        }\n\n        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);\n        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;\n\n        switch (event.data.message) {\n\n            case 'previous':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'next':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'index':\n                var index = event.data.index === 0 ? 0 :\n                    event.data.index || $target.index() * _.options.slidesToScroll;\n\n                _.slideHandler(_.checkNavigable(index), false, dontAnimate);\n                $target.children().trigger('focus');\n                break;\n\n            default:\n                return;\n        }\n\n    };\n\n    Slick.prototype.checkNavigable = function(index) {\n\n        var _ = this,\n            navigables, prevNavigable;\n\n        navigables = _.getNavigableIndexes();\n        prevNavigable = 0;\n        if (index > navigables[navigables.length - 1]) {\n            index = navigables[navigables.length - 1];\n        } else {\n            for (var n in navigables) {\n                if (index < navigables[n]) {\n                    index = prevNavigable;\n                    break;\n                }\n                prevNavigable = navigables[n];\n            }\n        }\n\n        return index;\n    };\n\n    Slick.prototype.cleanUpEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots && _.$dots !== null) {\n\n            $('li', _.$dots)\n                .off('click.slick', _.changeSlide)\n                .off('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n            if (_.options.accessibility === true) {\n                _.$dots.off('keydown.slick', _.keyHandler);\n            }\n        }\n\n        _.$slider.off('focus.slick blur.slick');\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);\n            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);\n\n            if (_.options.accessibility === true) {\n                _.$prevArrow && _.$prevArrow.off('keydown.slick', _.keyHandler);\n                _.$nextArrow && _.$nextArrow.off('keydown.slick', _.keyHandler);\n            }\n        }\n\n        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);\n        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);\n        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);\n        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);\n\n        _.$list.off('click.slick', _.clickHandler);\n\n        $(document).off(_.visibilityChange, _.visibility);\n\n        _.cleanUpSlideEvents();\n\n        if (_.options.accessibility === true) {\n            _.$list.off('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().off('click.slick', _.selectHandler);\n        }\n\n        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);\n\n        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);\n\n        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);\n\n        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);\n\n    };\n\n    Slick.prototype.cleanUpSlideEvents = function() {\n\n        var _ = this;\n\n        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));\n        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n    };\n\n    Slick.prototype.cleanUpRows = function() {\n\n        var _ = this, originalSlides;\n\n        if(_.options.rows > 0) {\n            originalSlides = _.$slides.children().children();\n            originalSlides.removeAttr('style');\n            _.$slider.empty().append(originalSlides);\n        }\n\n    };\n\n    Slick.prototype.clickHandler = function(event) {\n\n        var _ = this;\n\n        if (_.shouldClick === false) {\n            event.stopImmediatePropagation();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n\n    };\n\n    Slick.prototype.destroy = function(refresh) {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        _.touchObject = {};\n\n        _.cleanUpEvents();\n\n        $('.slick-cloned', _.$slider).detach();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n        if ( _.$prevArrow && _.$prevArrow.length ) {\n\n            _.$prevArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.prevArrow )) {\n                _.$prevArrow.remove();\n            }\n        }\n\n        if ( _.$nextArrow && _.$nextArrow.length ) {\n\n            _.$nextArrow\n                .removeClass('slick-disabled slick-arrow slick-hidden')\n                .removeAttr('aria-hidden aria-disabled tabindex')\n                .css('display','');\n\n            if ( _.htmlExpr.test( _.options.nextArrow )) {\n                _.$nextArrow.remove();\n            }\n        }\n\n\n        if (_.$slides) {\n\n            _.$slides\n                .removeClass('slick-slide slick-active slick-center slick-visible slick-current')\n                .removeAttr('aria-hidden')\n                .removeAttr('data-slick-index')\n                .each(function(){\n                    $(this).attr('style', $(this).data('originalStyling'));\n                });\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slideTrack.detach();\n\n            _.$list.detach();\n\n            _.$slider.append(_.$slides);\n        }\n\n        _.cleanUpRows();\n\n        _.$slider.removeClass('slick-slider');\n        _.$slider.removeClass('slick-initialized');\n        _.$slider.removeClass('slick-dotted');\n\n        _.unslicked = true;\n\n        if(!refresh) {\n            _.$slider.trigger('destroy', [_]);\n        }\n\n    };\n\n    Slick.prototype.disableTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        transition[_.transitionType] = '';\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.fadeSlide = function(slideIndex, callback) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).css({\n                zIndex: _.options.zIndex\n            });\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 1\n            }, _.options.speed, _.options.easing, callback);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 1,\n                zIndex: _.options.zIndex\n            });\n\n            if (callback) {\n                setTimeout(function() {\n\n                    _.disableTransition(slideIndex);\n\n                    callback.call();\n                }, _.options.speed);\n            }\n\n        }\n\n    };\n\n    Slick.prototype.fadeSlideOut = function(slideIndex) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            }, _.options.speed, _.options.easing);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 0,\n                zIndex: _.options.zIndex - 2\n            });\n\n        }\n\n    };\n\n    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {\n\n        var _ = this;\n\n        if (filter !== null) {\n\n            _.$slidesCache = _.$slides;\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.focusHandler = function() {\n\n        var _ = this;\n\n        _.$slider\n            .off('focus.slick blur.slick')\n            .on('focus.slick blur.slick', '*', function(event) {\n\n            event.stopImmediatePropagation();\n            var $sf = $(this);\n\n            setTimeout(function() {\n\n                if( _.options.pauseOnFocus ) {\n                    _.focussed = $sf.is(':focus');\n                    _.autoPlay();\n                }\n\n            }, 0);\n\n        });\n    };\n\n    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {\n\n        var _ = this;\n        return _.currentSlide;\n\n    };\n\n    Slick.prototype.getDotCount = function() {\n\n        var _ = this;\n\n        var breakPoint = 0;\n        var counter = 0;\n        var pagerQty = 0;\n\n        if (_.options.infinite === true) {\n            if (_.slideCount <= _.options.slidesToShow) {\n                 ++pagerQty;\n            } else {\n                while (breakPoint < _.slideCount) {\n                    ++pagerQty;\n                    breakPoint = counter + _.options.slidesToScroll;\n                    counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n                }\n            }\n        } else if (_.options.centerMode === true) {\n            pagerQty = _.slideCount;\n        } else if(!_.options.asNavFor) {\n            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);\n        }else {\n            while (breakPoint < _.slideCount) {\n                ++pagerQty;\n                breakPoint = counter + _.options.slidesToScroll;\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n            }\n        }\n\n        return pagerQty - 1;\n\n    };\n\n    Slick.prototype.getLeft = function(slideIndex) {\n\n        var _ = this,\n            targetLeft,\n            verticalHeight,\n            verticalOffset = 0,\n            targetSlide,\n            coef;\n\n        _.slideOffset = 0;\n        verticalHeight = _.$slides.first().outerHeight(true);\n\n        if (_.options.infinite === true) {\n            if (_.slideCount > _.options.slidesToShow) {\n                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;\n                coef = -1\n\n                if (_.options.vertical === true && _.options.centerMode === true) {\n                    if (_.options.slidesToShow === 2) {\n                        coef = -1.5;\n                    } else if (_.options.slidesToShow === 1) {\n                        coef = -2\n                    }\n                }\n                verticalOffset = (verticalHeight * _.options.slidesToShow) * coef;\n            }\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {\n                    if (slideIndex > _.slideCount) {\n                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;\n                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;\n                    } else {\n                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;\n                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;\n                    }\n                }\n            }\n        } else {\n            if (slideIndex + _.options.slidesToShow > _.slideCount) {\n                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;\n                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;\n            }\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.slideOffset = 0;\n            verticalOffset = 0;\n        }\n\n        if (_.options.centerMode === true && _.slideCount <= _.options.slidesToShow) {\n            _.slideOffset = ((_.slideWidth * Math.floor(_.options.slidesToShow)) / 2) - ((_.slideWidth * _.slideCount) / 2);\n        } else if (_.options.centerMode === true && _.options.infinite === true) {\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;\n        } else if (_.options.centerMode === true) {\n            _.slideOffset = 0;\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);\n        }\n\n        if (_.options.vertical === false) {\n            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;\n        } else {\n            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;\n        }\n\n        if (_.options.variableWidth === true) {\n\n            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n            } else {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);\n            }\n\n            if (_.options.rtl === true) {\n                if (targetSlide[0]) {\n                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                } else {\n                    targetLeft =  0;\n                }\n            } else {\n                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n            }\n\n            if (_.options.centerMode === true) {\n                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n                } else {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);\n                }\n\n                if (_.options.rtl === true) {\n                    if (targetSlide[0]) {\n                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;\n                    } else {\n                        targetLeft =  0;\n                    }\n                } else {\n                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n                }\n\n                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;\n            }\n        }\n\n        return targetLeft;\n\n    };\n\n    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {\n\n        var _ = this;\n\n        return _.options[option];\n\n    };\n\n    Slick.prototype.getNavigableIndexes = function() {\n\n        var _ = this,\n            breakPoint = 0,\n            counter = 0,\n            indexes = [],\n            max;\n\n        if (_.options.infinite === false) {\n            max = _.slideCount;\n        } else {\n            breakPoint = _.options.slidesToScroll * -1;\n            counter = _.options.slidesToScroll * -1;\n            max = _.slideCount * 2;\n        }\n\n        while (breakPoint < max) {\n            indexes.push(breakPoint);\n            breakPoint = counter + _.options.slidesToScroll;\n            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;\n        }\n\n        return indexes;\n\n    };\n\n    Slick.prototype.getSlick = function() {\n\n        return this;\n\n    };\n\n    Slick.prototype.getSlideCount = function() {\n\n        var _ = this,\n            slidesTraversed, swipedSlide, centerOffset;\n\n        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;\n\n        if (_.options.swipeToSlide === true) {\n            _.$slideTrack.find('.slick-slide').each(function(index, slide) {\n                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {\n                    swipedSlide = slide;\n                    return false;\n                }\n            });\n\n            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;\n\n            return slidesTraversed;\n\n        } else {\n            return _.options.slidesToScroll;\n        }\n\n    };\n\n    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'index',\n                index: parseInt(slide)\n            }\n        }, dontAnimate);\n\n    };\n\n    Slick.prototype.init = function(creation) {\n\n        var _ = this;\n\n        if (!$(_.$slider).hasClass('slick-initialized')) {\n\n            $(_.$slider).addClass('slick-initialized');\n\n            _.buildRows();\n            _.buildOut();\n            _.setProps();\n            _.startLoad();\n            _.loadSlider();\n            _.initializeEvents();\n            _.updateArrows();\n            _.updateDots();\n            _.checkResponsive(true);\n            _.focusHandler();\n\n        }\n\n        if (creation) {\n            _.$slider.trigger('init', [_]);\n        }\n\n        if (_.options.accessibility === true) {\n            _.initADA();\n        }\n\n        if ( _.options.autoplay ) {\n\n            _.paused = false;\n            _.autoPlay();\n\n        }\n\n    };\n\n    Slick.prototype.initADA = function() {\n        var _ = this,\n                numDotGroups = Math.ceil(_.slideCount / _.options.slidesToShow),\n                tabControlIndexes = _.getNavigableIndexes().filter(function(val) {\n                    return (val >= 0) && (val < _.slideCount);\n                });\n\n        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({\n            'aria-hidden': 'true',\n            'tabindex': '-1'\n        }).find('a, input, button, select').attr({\n            'tabindex': '-1'\n        });\n\n        if (_.$dots !== null) {\n            _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i) {\n                var slideControlIndex = tabControlIndexes.indexOf(i);\n\n                $(this).attr({\n                    'role': 'tabpanel',\n                    'id': 'slick-slide' + _.instanceUid + i,\n                    'tabindex': -1\n                });\n\n                if (slideControlIndex !== -1) {\n                   var ariaButtonControl = 'slick-slide-control' + _.instanceUid + slideControlIndex\n                   if ($('#' + ariaButtonControl).length) {\n                     $(this).attr({\n                         'aria-describedby': ariaButtonControl\n                     });\n                   }\n                }\n            });\n\n            _.$dots.attr('role', 'tablist').find('li').each(function(i) {\n                var mappedSlideIndex = tabControlIndexes[i];\n\n                $(this).attr({\n                    'role': 'presentation'\n                });\n\n                $(this).find('button').first().attr({\n                    'role': 'tab',\n                    'id': 'slick-slide-control' + _.instanceUid + i,\n                    'aria-controls': 'slick-slide' + _.instanceUid + mappedSlideIndex,\n                    'aria-label': (i + 1) + ' of ' + numDotGroups,\n                    'aria-selected': null,\n                    'tabindex': '-1'\n                });\n\n            }).eq(_.currentSlide).find('button').attr({\n                'aria-selected': 'true',\n                'tabindex': '0'\n            }).end();\n        }\n\n        for (var i=_.currentSlide, max=i+_.options.slidesToShow; i < max; i++) {\n          if (_.options.focusOnChange) {\n            _.$slides.eq(i).attr({'tabindex': '0'});\n          } else {\n            _.$slides.eq(i).removeAttr('tabindex');\n          }\n        }\n\n        _.activateADA();\n\n    };\n\n    Slick.prototype.initArrowEvents = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'previous'\n               }, _.changeSlide);\n            _.$nextArrow\n               .off('click.slick')\n               .on('click.slick', {\n                    message: 'next'\n               }, _.changeSlide);\n\n            if (_.options.accessibility === true) {\n                _.$prevArrow.on('keydown.slick', _.keyHandler);\n                _.$nextArrow.on('keydown.slick', _.keyHandler);\n            }\n        }\n\n    };\n\n    Slick.prototype.initDotEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n            $('li', _.$dots).on('click.slick', {\n                message: 'index'\n            }, _.changeSlide);\n\n            if (_.options.accessibility === true) {\n                _.$dots.on('keydown.slick', _.keyHandler);\n            }\n        }\n\n        if (_.options.dots === true && _.options.pauseOnDotsHover === true && _.slideCount > _.options.slidesToShow) {\n\n            $('li', _.$dots)\n                .on('mouseenter.slick', $.proxy(_.interrupt, _, true))\n                .on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initSlideEvents = function() {\n\n        var _ = this;\n\n        if ( _.options.pauseOnHover ) {\n\n            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));\n            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));\n\n        }\n\n    };\n\n    Slick.prototype.initializeEvents = function() {\n\n        var _ = this;\n\n        _.initArrowEvents();\n\n        _.initDotEvents();\n        _.initSlideEvents();\n\n        _.$list.on('touchstart.slick mousedown.slick', {\n            action: 'start'\n        }, _.swipeHandler);\n        _.$list.on('touchmove.slick mousemove.slick', {\n            action: 'move'\n        }, _.swipeHandler);\n        _.$list.on('touchend.slick mouseup.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n        _.$list.on('touchcancel.slick mouseleave.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n\n        _.$list.on('click.slick', _.clickHandler);\n\n        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));\n\n        if (_.options.accessibility === true) {\n            _.$list.on('keydown.slick', _.keyHandler);\n        }\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));\n\n        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));\n\n        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);\n\n        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);\n        $(_.setPosition);\n\n    };\n\n    Slick.prototype.initUI = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.show();\n            _.$nextArrow.show();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.show();\n\n        }\n\n    };\n\n    Slick.prototype.keyHandler = function(event) {\n\n        var _ = this;\n         //Dont slide if the cursor is inside the form fields and arrow keys are pressed\n        if(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {\n            if (event.keyCode === 37 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'next' :  'previous'\n                    }\n                });\n            } else if (event.keyCode === 39 && _.options.accessibility === true) {\n                _.changeSlide({\n                    data: {\n                        message: _.options.rtl === true ? 'previous' : 'next'\n                    }\n                });\n            }\n        }\n\n    };\n\n    Slick.prototype.lazyLoad = function() {\n\n        var _ = this,\n            loadRange, cloneRange, rangeStart, rangeEnd;\n\n        function loadImages(imagesScope) {\n\n            $('img[data-lazy]', imagesScope).each(function() {\n\n                var image = $(this),\n                    imageSource = $(this).attr('data-lazy'),\n                    imageSrcSet = $(this).attr('data-srcset'),\n                    imageSizes  = $(this).attr('data-sizes') || _.$slider.attr('data-sizes'),\n                    imageToLoad = document.createElement('img');\n\n                imageToLoad.onload = function() {\n\n                    image\n                        .animate({ opacity: 0 }, 100, function() {\n\n                            if (imageSrcSet) {\n                                image\n                                    .attr('srcset', imageSrcSet );\n\n                                if (imageSizes) {\n                                    image\n                                        .attr('sizes', imageSizes );\n                                }\n                            }\n\n                            image\n                                .attr('src', imageSource)\n                                .animate({ opacity: 1 }, 200, function() {\n                                    image\n                                        .removeAttr('data-lazy data-srcset data-sizes')\n                                        .removeClass('slick-loading');\n                                });\n                            _.$slider.trigger('lazyLoaded', [_, image, imageSource]);\n                        });\n\n                };\n\n                imageToLoad.onerror = function() {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                };\n\n                imageToLoad.src = imageSource;\n\n            });\n\n        }\n\n        if (_.options.centerMode === true) {\n            if (_.options.infinite === true) {\n                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);\n                rangeEnd = rangeStart + _.options.slidesToShow + 2;\n            } else {\n                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));\n                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;\n            }\n        } else {\n            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;\n            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);\n            if (_.options.fade === true) {\n                if (rangeStart > 0) rangeStart--;\n                if (rangeEnd <= _.slideCount) rangeEnd++;\n            }\n        }\n\n        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);\n\n        if (_.options.lazyLoad === 'anticipated') {\n            var prevSlide = rangeStart - 1,\n                nextSlide = rangeEnd,\n                $slides = _.$slider.find('.slick-slide');\n\n            for (var i = 0; i < _.options.slidesToScroll; i++) {\n                if (prevSlide < 0) prevSlide = _.slideCount - 1;\n                loadRange = loadRange.add($slides.eq(prevSlide));\n                loadRange = loadRange.add($slides.eq(nextSlide));\n                prevSlide--;\n                nextSlide++;\n            }\n        }\n\n        loadImages(loadRange);\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-slide');\n            loadImages(cloneRange);\n        } else\n        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);\n            loadImages(cloneRange);\n        } else if (_.currentSlide === 0) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);\n            loadImages(cloneRange);\n        }\n\n    };\n\n    Slick.prototype.loadSlider = function() {\n\n        var _ = this;\n\n        _.setPosition();\n\n        _.$slideTrack.css({\n            opacity: 1\n        });\n\n        _.$slider.removeClass('slick-loading');\n\n        _.initUI();\n\n        if (_.options.lazyLoad === 'progressive') {\n            _.progressiveLazyLoad();\n        }\n\n    };\n\n    Slick.prototype.next = Slick.prototype.slickNext = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'next'\n            }\n        });\n\n    };\n\n    Slick.prototype.orientationChange = function() {\n\n        var _ = this;\n\n        _.checkResponsive();\n        _.setPosition();\n\n    };\n\n    Slick.prototype.pause = Slick.prototype.slickPause = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n        _.paused = true;\n\n    };\n\n    Slick.prototype.play = Slick.prototype.slickPlay = function() {\n\n        var _ = this;\n\n        _.autoPlay();\n        _.options.autoplay = true;\n        _.paused = false;\n        _.focussed = false;\n        _.interrupted = false;\n\n    };\n\n    Slick.prototype.postSlide = function(index) {\n\n        var _ = this;\n\n        if( !_.unslicked ) {\n\n            _.$slider.trigger('afterChange', [_, index]);\n\n            _.animating = false;\n\n            if (_.slideCount > _.options.slidesToShow) {\n                _.setPosition();\n            }\n\n            _.swipeLeft = null;\n\n            if ( _.options.autoplay ) {\n                _.autoPlay();\n            }\n\n            if (_.options.accessibility === true) {\n                _.initADA();\n\n                if (_.options.focusOnChange) {\n                    var $currentSlide = $(_.$slides.get(_.currentSlide));\n                    $currentSlide.attr('tabindex', 0).focus();\n                }\n            }\n\n        }\n\n    };\n\n    Slick.prototype.prev = Slick.prototype.slickPrev = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'previous'\n            }\n        });\n\n    };\n\n    Slick.prototype.preventDefault = function(event) {\n\n        event.preventDefault();\n\n    };\n\n    Slick.prototype.progressiveLazyLoad = function( tryCount ) {\n\n        tryCount = tryCount || 1;\n\n        var _ = this,\n            $imgsToLoad = $( 'img[data-lazy]', _.$slider ),\n            image,\n            imageSource,\n            imageSrcSet,\n            imageSizes,\n            imageToLoad;\n\n        if ( $imgsToLoad.length ) {\n\n            image = $imgsToLoad.first();\n            imageSource = image.attr('data-lazy');\n            imageSrcSet = image.attr('data-srcset');\n            imageSizes  = image.attr('data-sizes') || _.$slider.attr('data-sizes');\n            imageToLoad = document.createElement('img');\n\n            imageToLoad.onload = function() {\n\n                if (imageSrcSet) {\n                    image\n                        .attr('srcset', imageSrcSet );\n\n                    if (imageSizes) {\n                        image\n                            .attr('sizes', imageSizes );\n                    }\n                }\n\n                image\n                    .attr( 'src', imageSource )\n                    .removeAttr('data-lazy data-srcset data-sizes')\n                    .removeClass('slick-loading');\n\n                if ( _.options.adaptiveHeight === true ) {\n                    _.setPosition();\n                }\n\n                _.$slider.trigger('lazyLoaded', [ _, image, imageSource ]);\n                _.progressiveLazyLoad();\n\n            };\n\n            imageToLoad.onerror = function() {\n\n                if ( tryCount < 3 ) {\n\n                    /**\n                     * try to load the image 3 times,\n                     * leave a slight delay so we don't get\n                     * servers blocking the request.\n                     */\n                    setTimeout( function() {\n                        _.progressiveLazyLoad( tryCount + 1 );\n                    }, 500 );\n\n                } else {\n\n                    image\n                        .removeAttr( 'data-lazy' )\n                        .removeClass( 'slick-loading' )\n                        .addClass( 'slick-lazyload-error' );\n\n                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);\n\n                    _.progressiveLazyLoad();\n\n                }\n\n            };\n\n            imageToLoad.src = imageSource;\n\n        } else {\n\n            _.$slider.trigger('allImagesLoaded', [ _ ]);\n\n        }\n\n    };\n\n    Slick.prototype.refresh = function( initializing ) {\n\n        var _ = this, currentSlide, lastVisibleIndex;\n\n        lastVisibleIndex = _.slideCount - _.options.slidesToShow;\n\n        // in non-infinite sliders, we don't want to go past the\n        // last visible index.\n        if( !_.options.infinite && ( _.currentSlide > lastVisibleIndex )) {\n            _.currentSlide = lastVisibleIndex;\n        }\n\n        // if less slides than to show, go to start.\n        if ( _.slideCount <= _.options.slidesToShow ) {\n            _.currentSlide = 0;\n\n        }\n\n        currentSlide = _.currentSlide;\n\n        _.destroy(true);\n\n        $.extend(_, _.initials, { currentSlide: currentSlide });\n\n        _.init();\n\n        if( !initializing ) {\n\n            _.changeSlide({\n                data: {\n                    message: 'index',\n                    index: currentSlide\n                }\n            }, false);\n\n        }\n\n    };\n\n    Slick.prototype.registerBreakpoints = function() {\n\n        var _ = this, breakpoint, currentBreakpoint, l,\n            responsiveSettings = _.options.responsive || null;\n\n        if ( $.type(responsiveSettings) === 'array' && responsiveSettings.length ) {\n\n            _.respondTo = _.options.respondTo || 'window';\n\n            for ( breakpoint in responsiveSettings ) {\n\n                l = _.breakpoints.length-1;\n\n                if (responsiveSettings.hasOwnProperty(breakpoint)) {\n                    currentBreakpoint = responsiveSettings[breakpoint].breakpoint;\n\n                    // loop through the breakpoints and cut out any existing\n                    // ones with the same breakpoint number, we don't want dupes.\n                    while( l >= 0 ) {\n                        if( _.breakpoints[l] && _.breakpoints[l] === currentBreakpoint ) {\n                            _.breakpoints.splice(l,1);\n                        }\n                        l--;\n                    }\n\n                    _.breakpoints.push(currentBreakpoint);\n                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;\n\n                }\n\n            }\n\n            _.breakpoints.sort(function(a, b) {\n                return ( _.options.mobileFirst ) ? a-b : b-a;\n            });\n\n        }\n\n    };\n\n    Slick.prototype.reinit = function() {\n\n        var _ = this;\n\n        _.$slides =\n            _.$slideTrack\n                .children(_.options.slide)\n                .addClass('slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {\n            _.currentSlide = _.currentSlide - _.options.slidesToScroll;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.currentSlide = 0;\n        }\n\n        _.registerBreakpoints();\n\n        _.setProps();\n        _.setupInfinite();\n        _.buildArrows();\n        _.updateArrows();\n        _.initArrowEvents();\n        _.buildDots();\n        _.updateDots();\n        _.initDotEvents();\n        _.cleanUpSlideEvents();\n        _.initSlideEvents();\n\n        _.checkResponsive(false, true);\n\n        if (_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);\n\n        _.setPosition();\n        _.focusHandler();\n\n        _.paused = !_.options.autoplay;\n        _.autoPlay();\n\n        _.$slider.trigger('reInit', [_]);\n\n    };\n\n    Slick.prototype.resize = function() {\n\n        var _ = this;\n\n        if ($(window).width() !== _.windowWidth) {\n            clearTimeout(_.windowDelay);\n            _.windowDelay = window.setTimeout(function() {\n                _.windowWidth = $(window).width();\n                _.checkResponsive();\n                if( !_.unslicked ) { _.setPosition(); }\n            }, 50);\n        }\n    };\n\n    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            removeBefore = index;\n            index = removeBefore === true ? 0 : _.slideCount - 1;\n        } else {\n            index = removeBefore === true ? --index : index;\n        }\n\n        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {\n            return false;\n        }\n\n        _.unload();\n\n        if (removeAll === true) {\n            _.$slideTrack.children().remove();\n        } else {\n            _.$slideTrack.children(this.options.slide).eq(index).remove();\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.setCSS = function(position) {\n\n        var _ = this,\n            positionProps = {},\n            x, y;\n\n        if (_.options.rtl === true) {\n            position = -position;\n        }\n        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';\n        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';\n\n        positionProps[_.positionProp] = position;\n\n        if (_.transformsEnabled === false) {\n            _.$slideTrack.css(positionProps);\n        } else {\n            positionProps = {};\n            if (_.cssTransitions === false) {\n                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';\n                _.$slideTrack.css(positionProps);\n            } else {\n                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n                _.$slideTrack.css(positionProps);\n            }\n        }\n\n    };\n\n    Slick.prototype.setDimensions = function() {\n\n        var _ = this;\n\n        if (_.options.vertical === false) {\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: ('0px ' + _.options.centerPadding)\n                });\n            }\n        } else {\n            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: (_.options.centerPadding + ' 0px')\n                });\n            }\n        }\n\n        _.listWidth = _.$list.width();\n        _.listHeight = _.$list.height();\n\n\n        if (_.options.vertical === false && _.options.variableWidth === false) {\n            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);\n            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));\n\n        } else if (_.options.variableWidth === true) {\n            _.$slideTrack.width(5000 * _.slideCount);\n        } else {\n            _.slideWidth = Math.ceil(_.listWidth);\n            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));\n        }\n\n        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();\n        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);\n\n    };\n\n    Slick.prototype.setFade = function() {\n\n        var _ = this,\n            targetLeft;\n\n        _.$slides.each(function(index, element) {\n            targetLeft = (_.slideWidth * index) * -1;\n            if (_.options.rtl === true) {\n                $(element).css({\n                    position: 'relative',\n                    right: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            } else {\n                $(element).css({\n                    position: 'relative',\n                    left: targetLeft,\n                    top: 0,\n                    zIndex: _.options.zIndex - 2,\n                    opacity: 0\n                });\n            }\n        });\n\n        _.$slides.eq(_.currentSlide).css({\n            zIndex: _.options.zIndex - 1,\n            opacity: 1\n        });\n\n    };\n\n    Slick.prototype.setHeight = function() {\n\n        var _ = this;\n\n        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.css('height', targetHeight);\n        }\n\n    };\n\n    Slick.prototype.setOption =\n    Slick.prototype.slickSetOption = function() {\n\n        /**\n         * accepts arguments in format of:\n         *\n         *  - for changing a single option's value:\n         *     .slick(\"setOption\", option, value, refresh )\n         *\n         *  - for changing a set of responsive options:\n         *     .slick(\"setOption\", 'responsive', [{}, ...], refresh )\n         *\n         *  - for updating multiple values at once (not responsive)\n         *     .slick(\"setOption\", { 'option': value, ... }, refresh )\n         */\n\n        var _ = this, l, item, option, value, refresh = false, type;\n\n        if( $.type( arguments[0] ) === 'object' ) {\n\n            option =  arguments[0];\n            refresh = arguments[1];\n            type = 'multiple';\n\n        } else if ( $.type( arguments[0] ) === 'string' ) {\n\n            option =  arguments[0];\n            value = arguments[1];\n            refresh = arguments[2];\n\n            if ( arguments[0] === 'responsive' && $.type( arguments[1] ) === 'array' ) {\n\n                type = 'responsive';\n\n            } else if ( typeof arguments[1] !== 'undefined' ) {\n\n                type = 'single';\n\n            }\n\n        }\n\n        if ( type === 'single' ) {\n\n            _.options[option] = value;\n\n\n        } else if ( type === 'multiple' ) {\n\n            $.each( option , function( opt, val ) {\n\n                _.options[opt] = val;\n\n            });\n\n\n        } else if ( type === 'responsive' ) {\n\n            for ( item in value ) {\n\n                if( $.type( _.options.responsive ) !== 'array' ) {\n\n                    _.options.responsive = [ value[item] ];\n\n                } else {\n\n                    l = _.options.responsive.length-1;\n\n                    // loop through the responsive object and splice out duplicates.\n                    while( l >= 0 ) {\n\n                        if( _.options.responsive[l].breakpoint === value[item].breakpoint ) {\n\n                            _.options.responsive.splice(l,1);\n\n                        }\n\n                        l--;\n\n                    }\n\n                    _.options.responsive.push( value[item] );\n\n                }\n\n            }\n\n        }\n\n        if ( refresh ) {\n\n            _.unload();\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.setPosition = function() {\n\n        var _ = this;\n\n        _.setDimensions();\n\n        _.setHeight();\n\n        if (_.options.fade === false) {\n            _.setCSS(_.getLeft(_.currentSlide));\n        } else {\n            _.setFade();\n        }\n\n        _.$slider.trigger('setPosition', [_]);\n\n    };\n\n    Slick.prototype.setProps = function() {\n\n        var _ = this,\n            bodyStyle = document.body.style;\n\n        _.positionProp = _.options.vertical === true ? 'top' : 'left';\n\n        if (_.positionProp === 'top') {\n            _.$slider.addClass('slick-vertical');\n        } else {\n            _.$slider.removeClass('slick-vertical');\n        }\n\n        if (bodyStyle.WebkitTransition !== undefined ||\n            bodyStyle.MozTransition !== undefined ||\n            bodyStyle.msTransition !== undefined) {\n            if (_.options.useCSS === true) {\n                _.cssTransitions = true;\n            }\n        }\n\n        if ( _.options.fade ) {\n            if ( typeof _.options.zIndex === 'number' ) {\n                if( _.options.zIndex < 3 ) {\n                    _.options.zIndex = 3;\n                }\n            } else {\n                _.options.zIndex = _.defaults.zIndex;\n            }\n        }\n\n        if (bodyStyle.OTransform !== undefined) {\n            _.animType = 'OTransform';\n            _.transformType = '-o-transform';\n            _.transitionType = 'OTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.MozTransform !== undefined) {\n            _.animType = 'MozTransform';\n            _.transformType = '-moz-transform';\n            _.transitionType = 'MozTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.webkitTransform !== undefined) {\n            _.animType = 'webkitTransform';\n            _.transformType = '-webkit-transform';\n            _.transitionType = 'webkitTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.msTransform !== undefined) {\n            _.animType = 'msTransform';\n            _.transformType = '-ms-transform';\n            _.transitionType = 'msTransition';\n            if (bodyStyle.msTransform === undefined) _.animType = false;\n        }\n        if (bodyStyle.transform !== undefined && _.animType !== false) {\n            _.animType = 'transform';\n            _.transformType = 'transform';\n            _.transitionType = 'transition';\n        }\n        _.transformsEnabled = _.options.useTransform && (_.animType !== null && _.animType !== false);\n    };\n\n\n    Slick.prototype.setSlideClasses = function(index) {\n\n        var _ = this,\n            centerOffset, allSlides, indexOffset, remainder;\n\n        allSlides = _.$slider\n            .find('.slick-slide')\n            .removeClass('slick-active slick-center slick-current')\n            .attr('aria-hidden', 'true');\n\n        _.$slides\n            .eq(index)\n            .addClass('slick-current');\n\n        if (_.options.centerMode === true) {\n\n            var evenCoef = _.options.slidesToShow % 2 === 0 ? 1 : 0;\n\n            centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n            if (_.options.infinite === true) {\n\n                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {\n                    _.$slides\n                        .slice(index - centerOffset + evenCoef, index + centerOffset + 1)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    indexOffset = _.options.slidesToShow + index;\n                    allSlides\n                        .slice(indexOffset - centerOffset + 1 + evenCoef, indexOffset + centerOffset + 2)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n                if (index === 0) {\n\n                    allSlides\n                        .eq(allSlides.length - 1 - _.options.slidesToShow)\n                        .addClass('slick-center');\n\n                } else if (index === _.slideCount - 1) {\n\n                    allSlides\n                        .eq(_.options.slidesToShow)\n                        .addClass('slick-center');\n\n                }\n\n            }\n\n            _.$slides\n                .eq(index)\n                .addClass('slick-center');\n\n        } else {\n\n            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {\n\n                _.$slides\n                    .slice(index, index + _.options.slidesToShow)\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else if (allSlides.length <= _.options.slidesToShow) {\n\n                allSlides\n                    .addClass('slick-active')\n                    .attr('aria-hidden', 'false');\n\n            } else {\n\n                remainder = _.slideCount % _.options.slidesToShow;\n                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;\n\n                if (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {\n\n                    allSlides\n                        .slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                } else {\n\n                    allSlides\n                        .slice(indexOffset, indexOffset + _.options.slidesToShow)\n                        .addClass('slick-active')\n                        .attr('aria-hidden', 'false');\n\n                }\n\n            }\n\n        }\n\n        if (_.options.lazyLoad === 'ondemand' || _.options.lazyLoad === 'anticipated') {\n            _.lazyLoad();\n        }\n    };\n\n    Slick.prototype.setupInfinite = function() {\n\n        var _ = this,\n            i, slideIndex, infiniteCount;\n\n        if (_.options.fade === true) {\n            _.options.centerMode = false;\n        }\n\n        if (_.options.infinite === true && _.options.fade === false) {\n\n            slideIndex = null;\n\n            if (_.slideCount > _.options.slidesToShow) {\n\n                if (_.options.centerMode === true) {\n                    infiniteCount = _.options.slidesToShow + 1;\n                } else {\n                    infiniteCount = _.options.slidesToShow;\n                }\n\n                for (i = _.slideCount; i > (_.slideCount -\n                        infiniteCount); i -= 1) {\n                    slideIndex = i - 1;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex - _.slideCount)\n                        .prependTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                for (i = 0; i < infiniteCount  + _.slideCount; i += 1) {\n                    slideIndex = i;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex + _.slideCount)\n                        .appendTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {\n                    $(this).attr('id', '');\n                });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.interrupt = function( toggle ) {\n\n        var _ = this;\n\n        if( !toggle ) {\n            _.autoPlay();\n        }\n        _.interrupted = toggle;\n\n    };\n\n    Slick.prototype.selectHandler = function(event) {\n\n        var _ = this;\n\n        var targetElement =\n            $(event.target).is('.slick-slide') ?\n                $(event.target) :\n                $(event.target).parents('.slick-slide');\n\n        var index = parseInt(targetElement.attr('data-slick-index'));\n\n        if (!index) index = 0;\n\n        if (_.slideCount <= _.options.slidesToShow) {\n\n            _.slideHandler(index, false, true);\n            return;\n\n        }\n\n        _.slideHandler(index);\n\n    };\n\n    Slick.prototype.slideHandler = function(index, sync, dontAnimate) {\n\n        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,\n            _ = this, navTarget;\n\n        sync = sync || false;\n\n        if (_.animating === true && _.options.waitForAnimate === true) {\n            return;\n        }\n\n        if (_.options.fade === true && _.currentSlide === index) {\n            return;\n        }\n\n        if (sync === false) {\n            _.asNavFor(index);\n        }\n\n        targetSlide = index;\n        targetLeft = _.getLeft(targetSlide);\n        slideLeft = _.getLeft(_.currentSlide);\n\n        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;\n\n        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {\n            if (_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        }\n\n        if ( _.options.autoplay ) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n        if (targetSlide < 0) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);\n            } else {\n                animSlide = _.slideCount + targetSlide;\n            }\n        } else if (targetSlide >= _.slideCount) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = 0;\n            } else {\n                animSlide = targetSlide - _.slideCount;\n            }\n        } else {\n            animSlide = targetSlide;\n        }\n\n        _.animating = true;\n\n        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);\n\n        oldSlide = _.currentSlide;\n        _.currentSlide = animSlide;\n\n        _.setSlideClasses(_.currentSlide);\n\n        if ( _.options.asNavFor ) {\n\n            navTarget = _.getNavTarget();\n            navTarget = navTarget.slick('getSlick');\n\n            if ( navTarget.slideCount <= navTarget.options.slidesToShow ) {\n                navTarget.setSlideClasses(_.currentSlide);\n            }\n\n        }\n\n        _.updateDots();\n        _.updateArrows();\n\n        if (_.options.fade === true) {\n            if (dontAnimate !== true) {\n\n                _.fadeSlideOut(oldSlide);\n\n                _.fadeSlide(animSlide, function() {\n                    _.postSlide(animSlide);\n                });\n\n            } else {\n                _.postSlide(animSlide);\n            }\n            _.animateHeight();\n            return;\n        }\n\n        if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {\n            _.animateSlide(targetLeft, function() {\n                _.postSlide(animSlide);\n            });\n        } else {\n            _.postSlide(animSlide);\n        }\n\n    };\n\n    Slick.prototype.startLoad = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.hide();\n            _.$nextArrow.hide();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.hide();\n\n        }\n\n        _.$slider.addClass('slick-loading');\n\n    };\n\n    Slick.prototype.swipeDirection = function() {\n\n        var xDist, yDist, r, swipeAngle, _ = this;\n\n        xDist = _.touchObject.startX - _.touchObject.curX;\n        yDist = _.touchObject.startY - _.touchObject.curY;\n        r = Math.atan2(yDist, xDist);\n\n        swipeAngle = Math.round(r * 180 / Math.PI);\n        if (swipeAngle < 0) {\n            swipeAngle = 360 - Math.abs(swipeAngle);\n        }\n\n        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {\n            return (_.options.rtl === false ? 'right' : 'left');\n        }\n        if (_.options.verticalSwiping === true) {\n            if ((swipeAngle >= 35) && (swipeAngle <= 135)) {\n                return 'down';\n            } else {\n                return 'up';\n            }\n        }\n\n        return 'vertical';\n\n    };\n\n    Slick.prototype.swipeEnd = function(event) {\n\n        var _ = this,\n            slideCount,\n            direction;\n\n        _.dragging = false;\n        _.swiping = false;\n\n        if (_.scrolling) {\n            _.scrolling = false;\n            return false;\n        }\n\n        _.interrupted = false;\n        _.shouldClick = ( _.touchObject.swipeLength > 10 ) ? false : true;\n\n        if ( _.touchObject.curX === undefined ) {\n            return false;\n        }\n\n        if ( _.touchObject.edgeHit === true ) {\n            _.$slider.trigger('edge', [_, _.swipeDirection() ]);\n        }\n\n        if ( _.touchObject.swipeLength >= _.touchObject.minSwipe ) {\n\n            direction = _.swipeDirection();\n\n            switch ( direction ) {\n\n                case 'left':\n                case 'down':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide + _.getSlideCount() ) :\n                            _.currentSlide + _.getSlideCount();\n\n                    _.currentDirection = 0;\n\n                    break;\n\n                case 'right':\n                case 'up':\n\n                    slideCount =\n                        _.options.swipeToSlide ?\n                            _.checkNavigable( _.currentSlide - _.getSlideCount() ) :\n                            _.currentSlide - _.getSlideCount();\n\n                    _.currentDirection = 1;\n\n                    break;\n\n                default:\n\n\n            }\n\n            if( direction != 'vertical' ) {\n\n                _.slideHandler( slideCount );\n                _.touchObject = {};\n                _.$slider.trigger('swipe', [_, direction ]);\n\n            }\n\n        } else {\n\n            if ( _.touchObject.startX !== _.touchObject.curX ) {\n\n                _.slideHandler( _.currentSlide );\n                _.touchObject = {};\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.swipeHandler = function(event) {\n\n        var _ = this;\n\n        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {\n            return;\n        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n            return;\n        }\n\n        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?\n            event.originalEvent.touches.length : 1;\n\n        _.touchObject.minSwipe = _.listWidth / _.options\n            .touchThreshold;\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.minSwipe = _.listHeight / _.options\n                .touchThreshold;\n        }\n\n        switch (event.data.action) {\n\n            case 'start':\n                _.swipeStart(event);\n                break;\n\n            case 'move':\n                _.swipeMove(event);\n                break;\n\n            case 'end':\n                _.swipeEnd(event);\n                break;\n\n        }\n\n    };\n\n    Slick.prototype.swipeMove = function(event) {\n\n        var _ = this,\n            edgeWasHit = false,\n            curLeft, swipeDirection, swipeLength, positionOffset, touches, verticalSwipeLength;\n\n        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\n        if (!_.dragging || _.scrolling || touches && touches.length !== 1) {\n            return false;\n        }\n\n        curLeft = _.getLeft(_.currentSlide);\n\n        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\n        _.touchObject.swipeLength = Math.round(Math.sqrt(\n            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));\n\n        verticalSwipeLength = Math.round(Math.sqrt(\n            Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));\n\n        if (!_.options.verticalSwiping && !_.swiping && verticalSwipeLength > 4) {\n            _.scrolling = true;\n            return false;\n        }\n\n        if (_.options.verticalSwiping === true) {\n            _.touchObject.swipeLength = verticalSwipeLength;\n        }\n\n        swipeDirection = _.swipeDirection();\n\n        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {\n            _.swiping = true;\n            event.preventDefault();\n        }\n\n        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);\n        if (_.options.verticalSwiping === true) {\n            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;\n        }\n\n\n        swipeLength = _.touchObject.swipeLength;\n\n        _.touchObject.edgeHit = false;\n\n        if (_.options.infinite === false) {\n            if ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {\n                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;\n                _.touchObject.edgeHit = true;\n            }\n        }\n\n        if (_.options.vertical === false) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        } else {\n            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;\n        }\n        if (_.options.verticalSwiping === true) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        }\n\n        if (_.options.fade === true || _.options.touchMove === false) {\n            return false;\n        }\n\n        if (_.animating === true) {\n            _.swipeLeft = null;\n            return false;\n        }\n\n        _.setCSS(_.swipeLeft);\n\n    };\n\n    Slick.prototype.swipeStart = function(event) {\n\n        var _ = this,\n            touches;\n\n        _.interrupted = true;\n\n        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {\n            _.touchObject = {};\n            return false;\n        }\n\n        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n            touches = event.originalEvent.touches[0];\n        }\n\n        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\n        _.dragging = true;\n\n    };\n\n    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {\n\n        var _ = this;\n\n        if (_.$slidesCache !== null) {\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.unload = function() {\n\n        var _ = this;\n\n        $('.slick-cloned', _.$slider).remove();\n\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n\n        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {\n            _.$prevArrow.remove();\n        }\n\n        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {\n            _.$nextArrow.remove();\n        }\n\n        _.$slides\n            .removeClass('slick-slide slick-active slick-visible slick-current')\n            .attr('aria-hidden', 'true')\n            .css('width', '');\n\n    };\n\n    Slick.prototype.unslick = function(fromBreakpoint) {\n\n        var _ = this;\n        _.$slider.trigger('unslick', [_, fromBreakpoint]);\n        _.destroy();\n\n    };\n\n    Slick.prototype.updateArrows = function() {\n\n        var _ = this,\n            centerOffset;\n\n        centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n        if ( _.options.arrows === true &&\n            _.slideCount > _.options.slidesToShow &&\n            !_.options.infinite ) {\n\n            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            if (_.currentSlide === 0) {\n\n                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {\n\n                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');\n                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.updateDots = function() {\n\n        var _ = this;\n\n        if (_.$dots !== null) {\n\n            _.$dots\n                .find('li')\n                    .removeClass('slick-active')\n                    .end();\n\n            _.$dots\n                .find('li')\n                .eq(Math.floor(_.currentSlide / _.options.slidesToScroll))\n                .addClass('slick-active');\n\n        }\n\n    };\n\n    Slick.prototype.visibility = function() {\n\n        var _ = this;\n\n        if ( _.options.autoplay ) {\n\n            if ( document[_.hidden] ) {\n\n                _.interrupted = true;\n\n            } else {\n\n                _.interrupted = false;\n\n            }\n\n        }\n\n    };\n\n    $.fn.slick = function() {\n        var _ = this,\n            opt = arguments[0],\n            args = Array.prototype.slice.call(arguments, 1),\n            l = _.length,\n            i,\n            ret;\n        for (i = 0; i < l; i++) {\n            if (typeof opt == 'object' || typeof opt == 'undefined')\n                _[i].slick = new Slick(_[i], opt);\n            else\n                ret = _[i].slick[opt].apply(_[i].slick, args);\n            if (typeof ret != 'undefined') return ret;\n        }\n        return _;\n    };\n\n}));\n"],"sourceRoot":""}
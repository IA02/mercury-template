// This program is part of the OpenCms Mercury Template.
//
// Copyright (c) Alkacon Software GmbH & Co. KG (http://www.alkacon.com)
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

/**********
 * Source file: _basics.scss
 */

html {
    height: 100vh;                          // set viewport constraint
    min-height: 100%;                       // enforce height

    &.opencms-page-editor {
        // in OpenCms page editor, add a top padding to move the content below the toolbar
        padding-top: $opencms-toolbar-height;
    }

    *,
    .btn,
    .dropdown > a,
    .dropdown-menu > a {
        // remove default focus from
        &:focus {
            outline: none;
            box-shadow: none;
        }
    }

    .dropdown-menu {
        // reset some boostrap options
        box-shadow: $nav-shadow;
        z-index: $above-oc-z-index + 1;
    }

    &.keyboard-nav {
        *:not(.mce-edit-focus),
        .dropdown > a,
        .dropdown-menu > a {

            &:focus {
                @include focus-outline();
            }
        }
        .media-box,
        .focus-within {
            &:focus-within {
                @include focus-outline(true);
            }
        }
    }

    // rem based font adjustment is done in mixin
    @include rem-base;
}

#mercury-page {
    min-height: 100vh;
    max-width: 100vw;
    overflow: hidden;
}

.default-font {
    font-family: $font-family-base;
    font-size: $font-size-base;
    font-weight: $font-weight-base;
    line-height: $line-height-base;
}

.lead {
    @include text-lead;
}


// Headings
h1, h2, h3, h4, h5, h6 {
    @include heading-base(true);
}

.h1, .h2, .h3, .h4, .h5, .h6 {
    @include heading-base(false);
}

@include media-breakpoint-down(md) {
    h1, .h1 {
        font-size: $h1-font-size-mobile;
    }
    h2, .h2 {
        font-size: $h2-font-size-mobile;
    }
    h3, .h3 {
        font-size: $h3-font-size-mobile;
    }
    h4, .h4 {
        font-size: $h4-font-size-mobile;
    }
}

@include media-breakpoint-up(lg) {
    h1, .h1 {
        font-size: $h1-font-size;
    }
    h2, .h2 {
        font-size: $h2-font-size;
    }
    h3, .h3 {
        font-size: $h3-font-size;
    }
    h4, .h4 {
        font-size: $h4-font-size;
    }
}

h5, .h5 {
    font-size: $h5-font-size;
}
h6, .h6 {
    font-size: $h6-font-size;
}


// Links
a {
    &:focus,
    &:hover {
        @include media-breakpoint-up(md) {
            @include color-transition;
        }
    }

    &:hover {
        outline: none;
    }

    &.uncolored {
        & {
            color: inherit;
        }
        &:focus,
        &:hover {
            color: $link-hover-color;
        }

        &.fully {
            &:focus,
            &:hover {
                color: inherit;
            }
        }
    }
}

@if ($linked-headings-color != none) {
    a {
        h1, h2, h3, h4, h5, h6 {
            color: $linked-headings-color;
        }
    }
}

@if (($linked-headings-hover-color != none) or ($linked-headings-decoration != none)) {
    a {
        &:hover {
            h1, h2, h3, h4, h5, h6 {
                @if ($linked-headings-hover-color != none) {
                    color: $linked-headings-hover-color;
                }
                @if ($linked-headings-decoration != none) {
                    text-decoration: $linked-headings-decoration;
                }
            }
        }
    }
}

@if ($link-external-icon) {

    a.external:after {
        font-family: ForkAwesome;
        content: " \f08e";
        margin-left: 2px;
    }

    .no-external,
    .type-iconbox,
    .section-visual {
        a.external::after {
            content: "";
            display: none;
        }
    }
}


// Badges
.badge {
    border-radius: 4px !important;
}

span.badge {
    color: $text-light;
    background-color: $grey;
    font-weight: $font-weight-base;
    padding: 4px 7px;
}


// Colored badges
@each $color-name, $bg-color, $highlight-color in $bg-colors {

    span.badge-#{""+$color-name} {
        color: get-text-color($bg-color);
        background: $bg-color;
    }
}


// Screen reader buttons with absolute position
.sr-only-focusable-fixed {
    @include sr-only-focusable();
    &:active,
    &:focus {
        position: fixed;
        top: 0;
        left: 0;
    }
}

html.opencms-page-editor {
    .sr-only-focusable-fixed {
        &:active,
        &:focus {
            top: $opencms-toolbar-height;
        }
    }
}

#keyboard-toggle {
    &::after {
         @include awesome-icons();
         margin-left: 1rem;
         content: "\f096"
    }
    &[aria-checked="true"] {
        &::after {
            content: "\f046"
        }
    }
}


// Basic Print support
@media print {
    html {
        font-size: $font-rem-base-print-size;
    }
    header,
    footer,
    aside {
        display: none !important;
    }
    main {
        width: 100% !important;
        > .container > .row > div {
            flex: 0 0 100%;
            max-width: initial;
        }
    }
    body {
        font-size: 12pt;
        line-height: 1.35;
        padding: 0;
        margin: 0;
    }
    img,
    .element,
    .teaser {
        page-break-inside: avoid;
    }
}

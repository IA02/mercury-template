{"version":3,"sources":["index.js"],"names":["Demo1ContentList","props","handleClickDetail","bind","demo1","content","this","loadContentDetail","self","itemList","Object","keys","state","result","map","file","item","isXmlContent","src","heading","localeContent","Title","Question","Paragraph","Image","link","SERVER","className","onClick","e","alt","label","type","React","Component","Demo1ContentSelect","handleChange","event","loadContentList","target","value","optionList","typeList","htmlFor","id","onChange","Demo1Detail","handleClickList","preventDefault","href","renderContent","title","author","Author","intro","Intro","caption","Caption","text","Text","width","dangerouslySetInnerHTML","__html","isTypeArticle","renderArticle","isTypeFaq","renderFaq","question","Demo1List","Demo1LocaleSelect","localeList","locale","Demo1","process","API_ENDPOINT","CONTENT_FOLDER","PARAMS","TYPE_ARTICLE","TYPE_FAQ","localeParam","url","fetch","then","reponse","json","setState","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7e466c3.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n/**\n * Class rendering the contents of a folder.\n */\nclass Demo1ContentList extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleClickDetail = this.handleClickDetail.bind(this);\n    this.demo1 = props.demo1;\n  }\n\n  /**\n   * Handler. Called when clicking on a list item.\n   */\n  handleClickDetail(content) {\n    this.demo1.loadContentDetail(content);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    let self = this;\n    // iterate the folder listing\n    const itemList = Object.keys(this.demo1.state.result).map(file => {\n      const item = self.demo1.state.result[file];\n      if (!item.isXmlContent) { // not a content file?\n        return false;\n      }\n      // we use an article's title and a FAQ's question property as the\n      // list item heading\n      const heading = item.localeContent.Title ? item.localeContent.Title :\n          item.localeContent.Question;\n      let src;\n      // the article content and the faq content both have a\n      // paragraph list property with an embedded image property\n      if (item.localeContent.Paragraph[0].Image) { // image exists?\n        src = item.localeContent.Paragraph[0].Image.Image.link;\n      }\n      src = src ? self.demo1.SERVER + src : '/favicon.ico';\n      return (\n        <div key={file}\n             className=\"demo1-list-item\"\n             onClick={(e) => self.handleClickDetail(file, e)}>\n          <div className=\"demo1-list-item-img-panel\">\n            <img src={src} alt={heading} className=\"demo1-list-item-img\"></img>\n          </div>\n          <div className=\"demo1-list-item-label-wrapper\">\n            <div className=\"demo1-list-item-label\">{heading}</div>\n          </div>\n        </div>\n      );\n    });\n    return (\n      <div className=\"demo1-list\">\n        <h3>{this.demo1.label[this.demo1.state.type]} (List)</h3>\n        <div className=\"demo1-list-items\">\n        {itemList}\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * Class representing an interactive component for content type selection.\n */\nclass Demo1ContentSelect extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.demo1 = props.demo1;\n  }\n\n  /**\n   * Handler. Called when a content type is selected.\n   */\n  handleChange(event) {\n    this.demo1.loadContentList(event.target.value);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    const optionList = this.demo1.typeList.map((content) =>\n      <option key={content} value={content}>{this.demo1.label[content]}</option>\n    );\n    return (\n      <div className=\"demo1-select\">\n        <label htmlFor=\"demo1ContentSelect\">Please select a content type: </label>\n        <select id=\"demo1ContentSelect\"\n                value={this.demo1.state.type}\n                onChange={this.handleChange}>\n          {optionList}\n        </select>\n      </div>\n    );\n  }\n}\n\n/**\n * Class representing the demo 1 detail view component.\n */\nclass Demo1Detail extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleClickList = this.handleClickList.bind(this);\n    this.demo1 = props.demo1;\n  }\n\n  /**\n   * Handler. Called when the back-link is clicked.\n   */\n  handleClickList(event) {\n    event.preventDefault();\n    this.demo1.loadContentList(this.demo1.state.type);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    return (\n      <div>\n        <h1>JSON API Demo 1</h1>\n        <p><a href=\".\" onClick={this.handleClickList}>Back</a> to the list.</p>\n        {this.renderContent()}\n      </div>\n    );\n  }\n\n  /**\n   * Renders an article detail view.\n   */\n  renderArticle() {\n    const result = this.demo1.state.result;\n    let src;\n    if (result.localeContent.Paragraph[0].Image) {\n      src = result.localeContent.Paragraph[0].Image.Image.link;\n    }\n    src = src ? this.demo1.SERVER + src : '/favicon.ico';\n    const title = result.localeContent.Title;\n    const author = result.localeContent.Author;\n    const intro = result.localeContent.Intro;\n    const caption = result.localeContent.Paragraph[0].Caption;\n    const text = result.localeContent.Paragraph[0].Text;\n    return (\n      <div>\n        <h3>{title} (Detail)</h3>\n        <p>by {author}</p>\n        <p>{intro}</p>\n        <img src={src} alt={caption} width=\"500\"/>\n        <div dangerouslySetInnerHTML={{__html: text}} />\n      </div>\n    );\n  }\n\n  /**\n   * Renders a detail view depending on which content type is loaded.\n   */\n  renderContent() {\n    if (this.demo1.isTypeArticle()) {\n      return this.renderArticle();\n    } else if (this.demo1.isTypeFaq()) {\n      return this.renderFaq();\n    } else {\n      return (<div>Unknown content type.</div>);\n    }\n  }\n\n  /**\n   * Renders a faq detail view.\n   */\n  renderFaq() {\n    const result = this.demo1.state.result;\n    let src;\n    if (result.localeContent.Paragraph[0].Image) {\n      src = result.localeContent.Paragraph[0].Image.Image.link;\n    }\n    src = src ? this.demo1.SERVER + src : '/favicon.ico';\n    const title = result.localeContent.Paragraph[0].Image.Image.link;\n    const question = result.localeContent.Question;\n    const caption = result.localeContent.Paragraph[0].Caption;\n    const text = result.localeContent.Paragraph[0].Text;\n    return (\n      <div>\n        <h3>{question} (Detail)</h3>\n        <p>{caption}</p>\n        <img src={src} alt={title} width=\"500\"/>\n        <div dangerouslySetInnerHTML={{__html: text}} />\n      </div>\n    );\n  }\n}\n\n/**\n * Class representing the demo 1 list view component.\n */\nclass Demo1List extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.demo1 = props.demo1;\n  }\n\n  /**\n   * Load the list when the component did mount.\n   */\n  componentDidMount() {\n    this.demo1.loadContentList(this.demo1.state.type);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    return (\n      <div>\n        <h1>JSON API Demo 1</h1>\n        <Demo1ContentSelect demo1={this.demo1}/>\n        <Demo1LocaleSelect demo1={this.demo1}/>\n        <Demo1ContentList demo1={this.demo1}/>\n      </div>\n    );\n  }\n}\n\n/**\n * Class representing an interactive component for locale selection.\n */\nclass Demo1LocaleSelect extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.demo1 = props.demo1;\n  }\n\n  /**\n   * Handler. Called when a locale is selected.\n   */\n  handleChange(event) {\n    this.demo1.loadContentList(this.demo1.state.type, event.target.value);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    const optionList = this.demo1.localeList.map((locale) =>\n      <option key={locale} value={locale}>{locale}</option>\n    );\n    return (\n      <div className=\"demo1-select\">\n        <label htmlFor=\"demo1LocaleSelect\">Please select a locale: </label>\n        <select id=\"demo1LocaleSelect\"\n                value={this.demo1.state.locale}\n                onChange={this.handleChange}>\n          {optionList}\n        </select>\n      </div>\n    );\n  }\n}\n\n/**\n * Class representing the demo 1 application.\n */\nclass Demo1 extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    /** The server URL. */\n    this.SERVER = process.env.REACT_APP_OPENCMS_SERVER;\n    /** The API endpoint. */\n    this.API_ENDPOINT = this.SERVER + '/json';\n    /** The content folder. */\n    this.CONTENT_FOLDER = this.API_ENDPOINT +\n        '/sites/default/mercury-demo/.content/';\n    /** The request parameters. */\n    this.PARAMS = '?content' + // embed contents in the folder listing\n        '&wrapper'; // request the resource wrapper to get a title property\n    /** The article content type. */\n    this.TYPE_ARTICLE = 'article-m';\n    /** The faq content type. */\n    this.TYPE_FAQ = 'faq-m';\n    /** The list of content types. */\n    this.typeList = [this.TYPE_ARTICLE, this.TYPE_FAQ];\n    /** Labels for the content types. */\n    this.label = {\n      'article-m': 'Article',\n      'faq-m': 'FAQ'\n    };\n    /** The list of locales. */\n    this.localeList = ['en', 'de'];\n    /** The state of this React application. */\n    this.state = {\n      type: this.TYPE_ARTICLE,\n      content: null,\n      result: {},\n      locale: 'en'\n    };\n  }\n\n  /**\n   * Loads the data for the detail view.\n   */\n  loadContentDetail(content, locale) {\n    const self = this;\n    if (!locale) {\n      locale = this.state.locale;\n    }\n    const localeParam = '&locale=' + locale + '&fallbackLocale';\n    const url = this.CONTENT_FOLDER + this.state.type + '/' + content +\n        this.PARAMS + localeParam;\n    fetch(url)\n      .then(reponse => reponse.json())\n      .then((result) => {\n        self.setState({\n          type: self.state.type,\n          content: content,\n          result: result,\n          locale: locale\n        })\n      });\n  }\n\n  /**\n   * Loads the data for the list view.\n   */\n  loadContentList(type, locale) {\n    const self = this;\n    if (!locale) {\n      locale = this.state.locale;\n    }\n    const localeParam = '&locale=' + locale + '&fallbackLocale';\n    const url = this.CONTENT_FOLDER + type + this.PARAMS + localeParam;;\n    fetch(url)\n      .then(response => response.json())\n      .then((result) => {\n        self.setState({\n          type: type,\n          content: null,\n          result: result,\n          locale: locale\n        })\n      });\n  }\n\n  /**\n   * Returns whether the loaded content is an article content.\n   */\n  isTypeArticle() {\n    return this.state.type === this.TYPE_ARTICLE;\n  }\n\n  /**\n   * Returns whether the loaded content is a FAQ content.\n   */\n  isTypeFaq() {\n    return this.state.type === this.TYPE_FAQ;\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    return this.state.content ? (<Demo1Detail demo1={this} />) :\n        (<Demo1List demo1={this} />);\n  }\n}\n\n/**\n * Render the demo 1 application.\n */\nReactDOM.render(\n  <Demo1 />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
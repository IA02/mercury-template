{"version":3,"sources":["demo/footer.js","demo/header.js","index.js"],"names":["DemoFooter","props","view","state","className","href","React","Component","DemoHeader","Demo1ContentList","handleClickDetail","bind","demo1","content","this","loadContentDetail","self","Object","keys","result","map","file","item","isXmlContent","src","heading","localeContent","Title","Question","Paragraph","Image","link","SERVER","alt","onClick","e","Demo1ContentSelect","handleChange","event","loadContentList","target","value","currentType","type","radioList","typeList","label","name","checked","onChange","Demo1Detail","handleClickList","preventDefault","renderContent","title","author","Author","intro","Intro","caption","Caption","text","Text","class","width","dangerouslySetInnerHTML","__html","isTypeArticle","renderArticle","isTypeFaq","renderFaq","question","Demo1List","Demo1LocaleSelect","currentLocale","locale","localeList","Demo1","process","API_ENDPOINT","CONTENT_FOLDER","PARAMS","TYPE_ARTICLE","TYPE_FAQ","localeParam","url","fetch","then","reponse","json","setState","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.510007fa.chunk.js","sourcesContent":["import React from 'react';\n\nclass DemoFooter extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.view = props.view;\n    this.state = props.state;\n  }\n\n  render() {\n    return (\n      <footer>\n        <div>\n          <h4>Demo using the OpenCms JSON API.</h4>\n          <div className=\"flex column\">\n            <a href=\"#\" className=\"doc\">Read the API Documentation</a>\n            <a href=\"#\" className=\"github\">View the Demo Source on GitHub</a>\n          </div>\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default DemoFooter;\n","import React from 'react';\n\nclass DemoHeader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.view = props.view;\n    this.state = props.state;\n  }\n\n  render() {\n    return (\n      <header>\n        <h1>Demo.</h1>\n        <h4>\n          <span>A demo single page application using </span>\n          <a href=\"#\">React.js</a>\n          <span> and </span>\n          <a href=\"#\">OpenCms</a>.\n        </h4>\n      </header>\n    )\n  }\n}\n\nexport default DemoHeader;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DemoFooter from './demo/footer';\nimport DemoHeader from './demo/header';\nimport './index.css';\n\n/**\n * Class rendering the contents of a folder.\n */\nclass Demo1ContentList extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleClickDetail = this.handleClickDetail.bind(this);\n    this.demo1 = props.demo1;\n  }\n\n  /**\n   * Handler. Called when clicking on a list item.\n   */\n  handleClickDetail(content) {\n    this.demo1.loadContentDetail(content);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    let self = this;\n    // iterate the folder listing\n    const itemList = Object.keys(this.demo1.state.result).map(file => {\n      const item = self.demo1.state.result[file];\n      if (!item.isXmlContent) { // not a content file?\n        return false;\n      }\n      // we use an article's title and a FAQ's question property as the\n      // list item heading\n      const heading = item.localeContent.Title ? item.localeContent.Title :\n          item.localeContent.Question;\n      let src;\n      // the article content and the faq content both have a\n      // paragraph list property with an embedded image property\n      if (item.localeContent.Paragraph[0].Image) { // image exists?\n        src = item.localeContent.Paragraph[0].Image.Image.link;\n      }\n      src = src ? self.demo1.SERVER + src : '/favicon.ico';\n      return (\n        <div key={file} className=\"list\">\n          <img src={src} alt={heading}></img>\n          <div>\n            <h3>{heading}</h3>\n            <a href=\"#\" onClick={(e) => self.handleClickDetail(file, e)}>Read more</a>\n          </div>\n        </div>\n      );\n    });\n    return itemList;\n  }\n}\n\n/**\n * Class representing an interactive component for content type selection.\n */\nclass Demo1ContentSelect extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.demo1 = props.demo1;\n  }\n\n  /**\n   * Handler. Called when a content type is selected.\n   */\n  handleChange(event) {\n    this.demo1.loadContentList(event.target.value);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    const self = this;\n    const currentType = this.demo1.state.type;\n    const radioList = this.demo1.typeList.map((type) =>\n      <label className=\"radio\" key={type}>{self.demo1.label[type]}\n        <input type=\"radio\" name=\"content\" value={type}\n               checked={currentType === type}\n               onChange={this.handleChange}/>\n        <span className=\"checkmark\"></span>\n      </label>\n    );\n    return (\n      <div>\n        <h4>Content type</h4>\n        {radioList}\n      </div>\n    );\n  }\n}\n\n/**\n * Class representing the demo 1 detail view component.\n */\nclass Demo1Detail extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleClickList = this.handleClickList.bind(this);\n    this.demo1 = props.demo1;\n  }\n\n  /**\n   * Handler. Called when the back-link is clicked.\n   */\n  handleClickList(event) {\n    event.preventDefault();\n    this.demo1.loadContentList(this.demo1.state.type);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    return (\n      <>\n        <h3 className=\"back\">\n          <a href=\"#\" onClick={this.handleClickList}>Back</a>\n        </h3>\n        {this.renderContent()}\n      </>\n    );\n  }\n\n  /**\n   * Renders an article detail view.\n   */\n  renderArticle() {\n    const result = this.demo1.state.result;\n    let src;\n    if (result.localeContent.Paragraph[0].Image) {\n      src = result.localeContent.Paragraph[0].Image.Image.link;\n    }\n    src = src ? this.demo1.SERVER + src : '/favicon.ico';\n    const title = result.localeContent.Title;\n    const author = result.localeContent.Author;\n    const intro = result.localeContent.Intro;\n    const caption = result.localeContent.Paragraph[0].Caption;\n    const text = result.localeContent.Paragraph[0].Text;\n    return (\n      <section class=\"detail\">\n        <h2>{title}</h2>\n        <h4>by {author}</h4>\n        <h4>{intro}</h4>\n        <img src={src} alt={caption} width=\"500\"/>\n        <div dangerouslySetInnerHTML={{__html: text}} />\n      </section>\n    );\n  }\n\n  /**\n   * Renders a detail view depending on which content type is loaded.\n   */\n  renderContent() {\n    if (this.demo1.isTypeArticle()) {\n      return this.renderArticle();\n    } else if (this.demo1.isTypeFaq()) {\n      return this.renderFaq();\n    } else {\n      return (<div>Unknown content type.</div>);\n    }\n  }\n\n  /**\n   * Renders a faq detail view.\n   */\n  renderFaq() {\n    const result = this.demo1.state.result;\n    let src;\n    if (result.localeContent.Paragraph[0].Image) {\n      src = result.localeContent.Paragraph[0].Image.Image.link;\n    }\n    src = src ? this.demo1.SERVER + src : '/favicon.ico';\n    const title = result.localeContent.Paragraph[0].Image.Image.link;\n    const question = result.localeContent.Question;\n    const caption = result.localeContent.Paragraph[0].Caption;\n    const text = result.localeContent.Paragraph[0].Text;\n    return (\n      <section class=\"detail\">\n        <h4>{question}</h4>\n        <h4>{caption}</h4>\n        <img src={src} alt={title}/>\n        <div dangerouslySetInnerHTML={{__html: text}} />\n      </section>\n    );\n  }\n}\n\n/**\n * Class representing the demo 1 list view component.\n */\nclass Demo1List extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.demo1 = props.demo1;\n  }\n\n  /**\n   * Load the list when the component did mount.\n   */\n  componentDidMount() {\n    this.demo1.loadContentList(this.demo1.state.type);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    return (\n      <>\n        <section className=\"select\">\n          <Demo1ContentSelect demo1={this.demo1}/>\n          <Demo1LocaleSelect demo1={this.demo1}/>\n        </section>\n        <section className=\"content\">\n          <Demo1ContentList demo1={this.demo1}/>\n        </section>\n      </>\n    );\n  }\n}\n\n/**\n * Class representing an interactive component for locale selection.\n */\nclass Demo1LocaleSelect extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.demo1 = props.demo1;\n  }\n\n  /**\n   * Handler. Called when a locale is selected.\n   */\n  handleChange(event) {\n    this.demo1.loadContentList(this.demo1.state.type, event.target.value);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    const currentLocale = this.demo1.state.locale;\n    const radioList = this.demo1.localeList.map((locale) =>\n      <label className=\"radio\" key={locale}>{locale}\n        <input type=\"radio\" name=\"locale\" value={locale}\n               checked={currentLocale === locale}\n               onChange={this.handleChange}/>\n        <span className=\"checkmark\"></span>\n      </label>\n    );\n    return (\n      <div>\n        <h4>Locale</h4>\n        {radioList}\n      </div>\n    );\n  }\n}\n\n/**\n * Class representing the demo 1 application.\n */\nclass Demo1 extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    /** The server URL. */\n    this.SERVER = process.env.REACT_APP_OPENCMS_SERVER;\n    /** The API endpoint. */\n    this.API_ENDPOINT = this.SERVER + '/json';\n    /** The content folder. */\n    this.CONTENT_FOLDER = this.API_ENDPOINT +\n        '/sites/default/mercury-demo/.content/';\n    /** The request parameters. */\n    this.PARAMS = '?content' + // embed contents in the folder listing\n        '&wrapper'; // request the resource wrapper to get a title property\n    /** The article content type. */\n    this.TYPE_ARTICLE = 'article-m';\n    /** The faq content type. */\n    this.TYPE_FAQ = 'faq-m';\n    /** The list of content types. */\n    this.typeList = [this.TYPE_ARTICLE, this.TYPE_FAQ];\n    /** Labels for the content types. */\n    this.label = {\n      'article-m': 'Article',\n      'faq-m': 'FAQ'\n    };\n    /** The list of locales. */\n    this.localeList = ['en', 'de'];\n    /** The state of this React application. */\n    this.state = {\n      type: this.TYPE_ARTICLE,\n      content: null,\n      result: {},\n      locale: 'en'\n    };\n  }\n\n  /**\n   * Loads the data for the detail view.\n   */\n  loadContentDetail(content, locale) {\n    const self = this;\n    if (!locale) {\n      locale = this.state.locale;\n    }\n    const localeParam = '&locale=' + locale + '&fallbackLocale';\n    const url = this.CONTENT_FOLDER + this.state.type + '/' + content +\n        this.PARAMS + localeParam;\n    fetch(url)\n      .then(reponse => reponse.json())\n      .then((result) => {\n        self.setState({\n          type: self.state.type,\n          content: content,\n          result: result,\n          locale: locale\n        })\n      });\n  }\n\n  /**\n   * Loads the data for the list view.\n   */\n  loadContentList(type, locale) {\n    const self = this;\n    if (!locale) {\n      locale = this.state.locale;\n    }\n    const localeParam = '&locale=' + locale + '&fallbackLocale';\n    const url = this.CONTENT_FOLDER + type + this.PARAMS + localeParam;;\n    fetch(url)\n      .then(response => response.json())\n      .then((result) => {\n        self.setState({\n          type: type,\n          content: null,\n          result: result,\n          locale: locale\n        })\n      });\n  }\n\n  /**\n   * Returns whether the loaded content is an article content.\n   */\n  isTypeArticle() {\n    return this.state.type === this.TYPE_ARTICLE;\n  }\n\n  /**\n   * Returns whether the loaded content is a FAQ content.\n   */\n  isTypeFaq() {\n    return this.state.type === this.TYPE_FAQ;\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    let view = this.state.content ? (<Demo1Detail demo1={this} />) :\n        (<Demo1List demo1={this} />);\n    return (\n      <main>\n        <div className=\"container\">\n          <DemoHeader />\n          {view}\n          <DemoFooter />\n        </div>\n      </main>\n    )\n  }\n}\n\n/**\n * Render the demo 1 application.\n */\nReactDOM.render(\n  <Demo1 />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
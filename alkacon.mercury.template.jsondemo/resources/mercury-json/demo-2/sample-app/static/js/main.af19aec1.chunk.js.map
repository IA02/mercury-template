{"version":3,"sources":["article.js","contact.js","index.js"],"names":["Article","props","demo2","content","author","this","localeContent","Author","paragraph","Paragraph","Array","length","caption","Caption","image","Image","src","link","SERVER","intro","Intro","text","Text","title","Title","imageSrc","alt","width","dangerouslySetInnerHTML","__html","React","Component","Contact","contact","Email","name","Name","FirstName","kind","Kind","LastName","address","AddressChoice","Address","poiLink","PoiLink","Locality","path","locality","linkedContents","Mobile","Organization","Phone","Position","PostalCode","postalCode","StreetAddress","streetAddress","console","log","personContact","href","email","mobile","className","firstName","lastName","position","organization","phone","Demo2Content","handleClickList","bind","event","preventDefault","loadList","component","state","properties","type","attributes","onClick","Demo2List","handleClickContent","handleShowMore","loadContent","loadListMore","renderList","item","renderUtilPreviewImage","self","list","itemList","map","idx","div","renderItemArticle","renderItemContact","e","pageInfo","moreResults","listInfo","rows","numFound","disabled","json","imageTitle","Demo2SelectSort","handleChange","target","value","htmlFor","id","sort","onChange","Demo2","process","ENDPOINT","LIST","PARAMS","contentUrl","fetch","then","response","setState","listUrl","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af19aec1.chunk.js","sourcesContent":["import React from 'react';\n\n/**\n * Class representing a component for an article content.\n */\nclass Article extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.demo2 = props.demo2;\n    this.content = props.content;\n  }\n\n  /**\n   * Returns the author of this article. Null safe.\n   */\n  get author() {\n    const author = this.content.localeContent.Author;\n    return author ? author : false;\n  }\n\n  /**\n   * Returns the caption of this article. Null safe.\n   */\n  get caption() {\n    const localeContent = this.content.localeContent;\n    const paragraph = localeContent.Paragraph;\n    if (paragraph && paragraph instanceof Array && paragraph.length) {\n      const caption = paragraph[0].Caption;\n      if (caption) {\n        return caption;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns the imageSrc of this article. Null safe.\n   */\n  get imageSrc() {\n    const localeContent = this.content.localeContent;\n    const paragraph = localeContent.Paragraph;\n    if (paragraph && paragraph instanceof Array && paragraph.length) {\n      const image = paragraph[0].Image;\n      if (image) {\n        let src = image.Image.link;\n        src = src ? this.demo2.SERVER + src : '/favicon.ico';\n        return src;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns the introduction of this article. Null safe.\n   */\n  get intro() {\n    const intro = this.content.localeContent.Intro;\n    return intro ? intro : false;\n  }\n\n  /**\n   * Returns the text of this article. Null safe.\n   */\n  get text() {\n    const localeContent = this.content.localeContent;\n    const paragraph = localeContent.Paragraph;\n    if (paragraph && paragraph instanceof Array && paragraph.length) {\n      const text = paragraph[0].Text;\n      if (text) {\n        return text;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns the title of this article. Null safe.\n   */\n  get title() {\n    const title = this.content.localeContent.Title;\n    return title ? title : false;\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    return (\n      <div>\n        <h3>{this.title} (Detail)</h3>\n        <p>by {this.author}</p>\n        <p>{this.intro}</p>\n        <img src={this.imageSrc} alt={this.caption ? this.caption : this.title} width=\"500\"/>\n        <div dangerouslySetInnerHTML={{__html: this.text}} />\n      </div>\n    );\n  }\n}\n\nexport default Article;\n","import React from 'react';\n\n/**\n * Class representing a component for a contact content.\n */\nclass Contact extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.demo2 = props.demo2;\n    this.content = props.content;\n  }\n\n  /**\n   * Returns the email of this contact. Null safe.\n   */\n  get email() {\n    let contact = this.content.localeContent.Contact;\n    if (contact && contact.Email) {\n      return contact.Email.Email;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the first name of this contact. Null safe.\n   */\n  get firstName() {\n    const name = this.content.localeContent.Name;\n    if (name) {\n      return name.FirstName;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the image URL of this contact. Null safe.\n   */\n  get imageSrc() {\n    const image = this.content.localeContent.Image;\n    if (image) {\n      return this.demo2.SERVER + image.Image.link;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the kind of this contact. Null safe.\n   */\n  get kind() {\n    const kind = this.content.localeContent.Kind;\n    return kind ? kind : false;\n  }\n\n  /**\n   * Returns the last name of this contact. Null safe.\n   */\n  get lastName() {\n    const name = this.content.localeContent.Name;\n    if (name) {\n      return name.LastName;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the locality of this contact. Null safe.\n   */\n  get locality() {\n    const contact = this.content.localeContent.Contact;\n    const address = contact.AddressChoice.Address;\n    const poiLink = contact.AddressChoice.PoiLink;\n    if (address) { // nested address?\n      return address.Locality;\n    } else if (poiLink) { // linked content?\n      const path = poiLink.path;\n      const linkedContent = this.content.linkedContents[path];\n      const address = linkedContent.localeContent.Address;\n      const locality = address.Locality;\n      if (locality) {\n        return locality;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns the mobile of this contact. Null safe.\n   */\n  get mobile() {\n    const contact = this.content.localeContent.Contact;\n    if (contact) {\n      return contact.Mobile;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the organization of this contact. Null safe.\n   */\n  get organization() {\n    const organization = this.content.localeContent.Organization;\n    return organization;\n  }\n\n  /**\n   * Returns the phone of this contact. Null safe.\n   */\n  get phone() {\n    const contact = this.content.localeContent.Contact;\n    if (contact) {\n      return contact.Phone;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the position of this contact. Null safe.\n   */\n  get position() {\n    const position = this.content.localeContent.Position;\n    return position;\n  }\n\n  /**\n   * Returns the postal code of this contact. Null safe.\n   */\n  get postalCode() {\n    const contact = this.content.localeContent.Contact;\n    const address = contact.AddressChoice.Address;\n    const poiLink = contact.AddressChoice.PoiLink;\n    if (address) { // nested address?\n      return address.PostalCode;\n    } else if (poiLink) { // linked content?\n      const path = poiLink.path;\n      const linkedContent = this.content.linkedContents[path];\n      const address = linkedContent.localeContent.Address;\n      const postalCode = address.PostalCode;\n      if (postalCode) {\n        return postalCode;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns the street address of this contact. Null safe.\n   */\n  get streetAddress() {\n    const contact = this.content.localeContent.Contact;\n    const address = contact.AddressChoice.Address;\n    const poiLink = contact.AddressChoice.PoiLink;\n    if (address) { // nested address?\n      return address.StreetAddress;\n    } else if (poiLink) { // linked content?\n      const path = poiLink.path;\n      const linkedContent = this.content.linkedContents[path];\n      const address = linkedContent.localeContent.Address;\n      const streetAddress = address.StreetAddress;\n      if (streetAddress) {\n        return streetAddress;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    console.log(this.content);\n    const personContact = this.kind === 'person' ? (\n      <>\n        <div>Email: <a href={'email:' + this.email}>{this.email}</a></div>\n        <div>Mobile: {this.mobile}</div>\n      </>\n    ) : false;\n    return (\n      <div className=\"m-contact\">\n        <h3>{this.firstName} {this.lastName} <small>{this.position}</small></h3>\n        <div><strong>{this.organization}</strong></div>\n        <div>{this.streetAddress}</div>\n        <div>{this.postalCode} {this.locality}</div>\n        <img src={this.imageSrc}\n             alt={this.firstName + ' ' + this.lastName + ', ' + this.position}/>\n        {personContact}\n        <div>Phone: {this.phone}</div>\n      </div>\n    )\n  }\n}\n\nexport default Contact;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Article from './article';\nimport Contact from './contact';\nimport './index.css';\n\n/**\n * Class representing the demo 2 detail view.\n */\nclass Demo2Content extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleClickList = this.handleClickList.bind(this);\n    this.demo2 = props.demo2;\n  }\n\n  /**\n   * Handler. Called when the back-link is clicked.\n   */\n  handleClickList(event) {\n    event.preventDefault();\n    this.demo2.loadList();\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    const content = this.demo2.state.content;\n    const title = content.properties.Title;\n    const type = content.attributes.type;\n    let component;\n    if (type === 'm-article') {\n      component = (<Article demo2={this.demo2} content={content}/>);\n    } else if (type === 'm-contact') {\n      component = (<Contact demo2={this.demo2} content={content}/>);\n    } else {\n      component = (\n        <div>\n          <h2>{title}</h2>\n          <p>Unknown detail type: {type}.</p>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <h1>JSON API Demo 2</h1>\n        <p><a href=\".\" onClick={this.handleClickList}>Back</a> to the list.</p>\n        {component}\n      </div>\n    );\n  }\n}\n\n/**\n * Class representing the demo 2 list view.\n */\nclass Demo2List extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleClickContent = this.handleClickContent.bind(this);\n    this.handleShowMore = this.handleShowMore.bind(this);\n    this.demo2 = props.demo2;\n  }\n\n  /**\n   * Load the list when the component did mount.\n   */\n  componentDidMount() {\n    this.demo2.loadList();\n  }\n\n  /**\n   * Handler. Called when a list item is clicked.\n   */\n  handleClickContent(content) {\n    const path = content.path;\n    this.demo2.loadContent(path);\n  }\n\n  /**\n   * Handler. Called when the show more button is clicked.\n   */\n  handleShowMore(event) {\n    this.demo2.loadListMore();\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    return (\n      <div>\n        <h1>JSON API Demo 2</h1>\n        {this.renderList()}\n      </div>\n    );\n  }\n\n  /**\n   * Renders an article preview.\n   */\n  renderItemArticle(item) {\n    return (\n      <div>\n        {this.renderUtilPreviewImage(item.localeContent.Paragraph[0].Image)}\n        <div className=\"demo2-list-item-label-wrapper\">\n          <div className=\"demo2-list-item-label\">{item.properties.Title}</div>\n        </div>\n      </div>\n    )\n  }\n\n  /**\n   * Renders a contact preview.\n   */\n  renderItemContact(item) {\n    return (\n      <div>\n        {this.renderUtilPreviewImage(item.localeContent.Image)}\n        <div className=\"demo2-list-item-label-wrapper\">\n          <div className=\"demo2-list-item-label\">{item.properties.Title}</div>\n        </div>\n      </div>\n    )\n  }\n\n  /**\n   * Renders the list depending on the respective content type.\n   */\n  renderList() {\n    const self = this;\n    const list = this.demo2.state.list;\n    const itemList = list.list ? list.list.map(function(item, idx) {\n      const type = item.attributes.type;\n      let div;\n      if (type === 'm-article') {\n        div = self.renderItemArticle(item);\n      } else if (type === 'm-contact') {\n        div = self.renderItemContact(item);\n      } else {\n        div = (\n          <div>Unknown list type: {type}.</div>\n        )\n      }\n      return (\n        <div className=\"demo2-list-item\"\n             key={item.properties.Title + idx}\n             onClick={(e) => self.handleClickContent(item, e)}>\n          <small className=\"demo2-list-item-type\">{item.attributes.type}</small>\n          {div}\n        </div>\n      )\n    }) : null;\n    let pageInfo = '';\n    let moreResults = true;\n    if (list.listInfo) {\n      let rows = this.demo2.state.rows > list.listInfo.numFound ?\n          list.listInfo.numFound : this.demo2.state.rows;\n      pageInfo += rows + '/' + list.listInfo.numFound;\n      moreResults = this.demo2.state.rows < list.listInfo.numFound;\n    }\n    return (\n      <div className=\"demo2-list\">\n        <h3>{list.Title}</h3>\n        <Demo2SelectSort demo2={this.demo2}/>\n        <div className=\"demo2-list-items\">\n        {itemList}\n        </div>\n        <div className=\"demo2-list-show-more\">\n          <span>{pageInfo} </span>\n          <button className=\"demo2-list-show-more-button\"\n                  onClick={this.handleShowMore}\n                  disabled={!moreResults}>\n            <big>Show more...</big>\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Utility function to generate an image preview.\n   */\n  renderUtilPreviewImage(json) {\n    const imageSrc = (!json || !json.Image || !json.Image.link) ?\n        this.demo2.SERVER + '/.galleries/cliparts/default.png' :\n        this.demo2.SERVER + json.Image.link;\n    const imageTitle = (!json || !json.Image || !json.Image.Title) ? '' :\n        json.Image.Title;\n    const image = <img src={imageSrc}\n             alt={imageTitle}\n             className=\"demo2-list-item-img\"/>;\n    return (<div className=\"demo2-list-item-img-panel\">{image}</div>)\n  }\n}\n\n/**\n * Class representing an interactive component for sort selection.\n */\nclass Demo2SelectSort extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.demo2 = props.demo2;\n  }\n\n  /**\n   * Handler. Called when a sort option is selected.\n   */\n  handleChange(event) {\n    this.demo2.loadList(event.target.value);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    return (\n      <div className=\"demo2-select-sort\">\n        <label htmlFor=\"demo2SelectSort\">Sort by </label>\n        <select id=\"demo2SelectSort\"\n                value={this.demo2.state.sort}\n                onChange={this.handleChange}>\n          <option value=\"DATE_ASC\">Date ascending</option>\n          <option value=\"DATE_DESC\">Date descending</option>\n          <option value=\"TITLE_ASC\">Title ascending</option>\n          <option value=\"TITLE_DESC\">Title descending</option>\n          <option value=\"ORDER_ASC\">Order ascending</option>\n          <option value=\"ORDER_DESC\">Order descending</option>\n        </select>\n      </div>\n    )\n  }\n}\n\n/**\n * Class representing the demo 2 application.\n */\nclass Demo2 extends React.Component {\n\n  /**\n   * Creates a new component.\n   */\n  constructor(props) {\n    super(props);\n    /** The server URL. */\n    this.SERVER = process.env.REACT_APP_OPENCMS_SERVER;\n    /** The API endpoint. */\n    this.ENDPOINT = this.SERVER + '/json';\n    /** The list configuration. */\n    this.LIST = '/sites/default/mercury-json/.content/list-m/list_00001.xml';\n    /** The request params. */\n    this.PARAMS = '?content&wrapper' + // request as much as possible information\n        '&locale=en&fallbackLocale'; // request one locale with fallback\n    /** The state of this component. */\n    this.state = {\n      content: null,\n      list: {},\n      sort: 'DATE_ASC',\n      rows: 5\n    };\n  }\n\n  /**\n   * Load a content.\n   */\n  loadContent(path) {\n    const self = this;\n    const contentUrl = this.ENDPOINT + path + this.PARAMS;\n    fetch(contentUrl)\n      .then(response => response.json())\n      .then((content) => {\n        self.setState({\n          content: content,\n          list: self.state.list,\n          sort: self.state.sort,\n          rows: self.state.rows\n        })\n      });\n  }\n\n  /**\n   * Loads a list, optionally for a given sort order and a given number of rows.\n   */\n  loadList(sort, rows) {\n    const self = this;\n    let listUrl = this.ENDPOINT + this.LIST + this.PARAMS;\n    if (sort) {\n      listUrl += '&sort=' + sort;\n    } else {\n      sort = '';\n    }\n    if (!rows) {\n      rows = 5;\n    }\n    listUrl += '&rows=' + rows;\n    fetch(listUrl)\n      .then(response => response.json())\n      .then((list) => {\n        self.setState({\n          content: null,\n          list: list,\n          sort: sort,\n          rows: rows\n        })\n      });\n  }\n\n  /**\n   * Load more results.\n   */\n  loadListMore() {\n    const rows = this.state.rows + 5;\n    this.loadList(this.state.sort, rows);\n  }\n\n  /**\n   * Renders this component.\n   */\n  render() {\n    return this.state.content ? <Demo2Content demo2={this} /> :\n        <Demo2List demo2={this} />;\n  }\n}\n\n/**\n * Render the demo 2 application.\n */\nReactDOM.render(\n  <Demo2 />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}